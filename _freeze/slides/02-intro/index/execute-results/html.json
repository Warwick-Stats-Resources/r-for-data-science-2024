{
  "hash": "6875cb97ffa1c35224fbc36c25bc6897",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: Introduction to R and RStudio\nsubtitle: R Foundations Course\nauthor: Heather Turner | Department of Statistics | University of Warwick\ntitle-slide-attributes:\n  data-background-color: \"#552D62\"\ndate: 2024-03-21\ndate-format: long\nformat: \n  warwickpres-revealjs:\n    execute:\n      echo: true\n      code-overflow: wrap\n---\n\n\n## Overview\n\n-   Why use R?\n\n-   Use RStudio to write and run R programmes\n\n-   Create and start an R project\n\n-   Use `install.packages()` to install packages\n\n-   How to get help in R\n\n-   See examples of data wrangling and visualisation\n\n# Why use R? {.inverse}\n\n## What can R do? {.smaller90}\n\n::: columns\n::: {.column width=\"50%\"}\n-   Data import\n\n-   Data management and wrangling\n\n-   Exploratory data analysis\n\n-   Statistical modelling\n\n-   Advanced statistics\n\n-   Machine learning\n:::\n\n::: {.column width=\"50%\"}\n-   Data visualisation\n\n-   Reports, articles\n\n-   Dashboards, web apps\n\n-   Integrates well with other languages\n\n-   Packages: share your code and use others\n:::\n:::\n\n## The R Ecosystem\n\n### Base R\n\n::: columns\n::: {.column width=\"50%\"}\n#### 15 base packages\n\n-   Create R objects\n-   Summaries\n-   Maths functions\n-   Statistics\n-   Graphics\n-   Datasets\n:::\n\n::: {.column width=\"50%\"}\n#### 15 recommended packages\n\n-   Statistics methodology\n-   More maths\n-   More graphics\n:::\n:::\n\n::: notes\nR is distributed with fifteen \"base packages\": base, compiler, datasets, grDevices, graphics, grid, methods, parallel, splines, stats, stats4, tcltk, tools, translations, and utils.\n\nIn addition, there are fifteen \"recommended packages\" from CRAN which are included with binary distributions of R: KernSmooth, MASS, Matrix, boot, class, cluster, codetools, foreign, lattice, mgcv, nlme, nnet, rpart, spatial, and survival.\n\nhttps://en.wikipedia.org/wiki/R_package#Base_and_recommended_packages\n:::\n\n## The R Ecosystem\n\n### Contributed packages\n\n::: columns\n::: {.column width=\"50%\"}\n#### CRAN\n\n-   Official R repository\n-   <https://cran.r-project.org>\n-   over 20000 packages\n:::\n\n::: {.column width=\"50%\"}\n#### Bioconductor\n\n-   Bioinformatics packages\n-   <https://www.bioconductor.org>\n-   over 2000 packages\n:::\n:::\n\n#### GitHub\n\n-   Packages in development\n-   GitHub-only packages\n\n## The tidyverse\n\nThe [tidyverse](https://www.tidyverse.org) is an opinionated collection of R packages designed for data science. All packages share an underlying design philosophy, grammar and data structures.\n\n![From <https://education.rstudio.com/blog/2020/07/teaching-the-tidyverse-in-2020-part-1-getting-started/>](images/tidyverse-packages.png){fig-align=\"center\"}\n\n**tidyverse** 2.0.0. includes **lubridate** for date-times as well (not shown in image).\n\n## palmerpenguins\n\n-   [**palmerpenguins**](https://allisonhorst.github.io/palmerpenguins/) is a dataset package, designed to be a great example for data exploration and visualisation.\n\n-   It contains measurement data for 344 penguins, from three different species, collected from three islands in the Palmer Archipelago, Antarctica.\n\n![Penguin artwork by Allison Horst <https://allisonhorst.github.io/palmerpenguins/articles/art.html>](images/lter_penguins.png){fig-align=\"center\"}\n\n## The R community\n\nAnother reason to love R is the community around it.\n\nIt prides itself on being friendly, diverse, helpful, and supportive.\n\n-   [R user groups](https://benubah.github.io/r-community-explorer/rugs.html){target=\"_blank\"}, especially [Warwick RUG](https://warwickrug.github.io){target=\"_blank\"}\n\n-   [RLadies](https://rladies.org){target=\"_blank\"}, especially [RLadies Coventry](https://www.meetup.com/rladies-coventry/){target=\"_blank\"}\n\n-   [RStudio Community](https://community.rstudio.com){target=\"_blank\"}\n\n-   [R for Data Science](https://www.rfordatasci.com){target=\"_blank\"}\n\n-   #RStats and #TidyTuesday on Mastodon\n\n-   [rainbowR](https://rainbowr.netlify.app){target=\"_blank\"} (LGBTQ+)\n\n-   [MiR](https://mircommunity.com){target=\"_blank\"} (minorities in R)\n\n# Introducing RStudio {.inverse}\n\n## At first\n\n![](images/new-RStudio-project.png)\n\n## With script\n\n![](images/RStudio-project-with-script.png) [RStudio cheatsheet](https://rstudio.github.io/cheatsheets/html/rstudio-ide.html)\n\n## Best practice: use R projects\n\nAn RStudio project is a contect for working on a specific project\n\n-   Keeps files well-organised\n\n-   Automatically sets working directory to project root\n\n-   Has separate workspace and command history\n\n-   Works well with version control via git or svn\n\n## Getting started with projects\n\n-   Create a project from a new or existing directory via the file menu or new project button\n\n-   Switch project, or open a different project in a new RStudio instance via the project menu\n\n## RStudio project demo\n\n-   Create R-Foundations project\n\n-   Create first script\n\n::: notes\n - Show how to create a new project\n     - Show .Rproj file, name of project in top-right corner\n - Show menu/buttons to open up a new R script (empty!)\n:::\n\n## Using the console\n\n-   For things that only need doing once, e.g. installing packages\n\n-   For doing things you don't need to track, e.g. requesting help files\n\n-   To quickly explore new ideas before adding them to a script\n\n## Using the console: shortcuts\n\nRStudio provides a few shortcuts to help write code in the R console\n\n-   <kbd title = \"up arrow\">↑</kbd>/<kbd title = \"down arrow\">↓</kbd> go back/forward through history one command at a time\n-   <kbd>Ctrl</kbd>/<kbd title = \"command\">⌘</kbd> + <kbd title = \"up arrow\">↑</kbd> review recent history and select command\n-   <kbd>Tab</kbd> view possible completions for part-written expression\n\nCode completion (using <kbd>Tab</kbd>) is also provided in the source editor\n\n## Using the console: demo\n\n``` r\n1 + 1\n?log\nlog(10)\nexp(-4 * 4 / 2) / sqrt(2 * pi)\ninstall.packages(\"tidyverse\")\ninstall.packages(\"palmerpenguins\")\n```\n\n::: notes\nType above code into the console!\n   - explain `[1]` that shows in print out\n   - only need to install packages once per version of R\n:::\n\n## Using scripts\n\nText files saved with an .R suffix are recognised as R code\n\nCode can be sent directly from a script to the console as follows:\n\n-   <kbd>Ctrl</kbd>/<kbd title = \"command\">⌘</kbd> + <kbd title = \"enter\">↵</kbd> or <img src=\"images/run_button.png\" alt=\"Run button\" height=\"50px\" style=\"vertical-align: middle;\"/> run current line\n    -   Run multiple lines by selecting first\n-   <kbd>Ctrl</kbd>/<kbd title = \"command\">⌘</kbd> + <kbd>Shift</kbd> + <kbd title = \"enter\">↵</kbd> or <img src=\"images/source_button.png\" alt=\"Source button\" height=\"50px\" style=\"vertical-align: middle;\"/>\n    -   Run the script from start to finish.\n\n## Why R scripts?\n\nWriting an R script for an analysis has several advantages over a graphical user interface (GUI)\n\n-   It provides a record of the exact approach used in an analysis\n-   It enables the analysis to be easily reproduced and modified\n-   It allows greater control\n\n## Good practice for R Scripts\n\nOrganising your R script well will help you and others understand and use it.\n\n-   Add comment or two at start to describe purpose of script\n    -   Use one or more `#` to start a comment\n-   Load required data and packages at the start\n-   Avoid hard-coding: define variables such as file paths early on\n-   Give functions and variable meaningful names\n-   Add  `----` to comment to separate sections (in RStudio Code \\> Insert Section)\n\n## Installing packages\n\n*In console*\n\n-   Install a package with `install.packages(\"package_name\")`\n\n    -   Watch out for the plural!\n\n-   Install multiple packages with `install.packages(c(\"package1\", \"package2\"))`\n\n    -   The `c()` function creates a vector\n\n-   Or use install button in packages pane:\n\n![](images/install_packages.png){width=\"400\" fig-align=\"center\"}\n\n## Loading packages\n\n*In script*\n\n-   Load packages with `library(package_name)`\n\n## R script demo\n\n``` r\n### load packages\nlibrary(palmerpenguins)\nlibrary(tidyverse)\n\n### Inspect data\nView(penguins)\nglimpse(penguins)\nhead(penguins)\nsummary(penguins)\n```\n\n# Getting help in R {.inverse}\n\n## Within R: Help with functions\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# help with a specific function\nhelp(function_name)\n?function_name\n\n# quick reminder of the function arguments\narg(function_name)\n\n# see an example\nexample(function_name)\n\n# see the source code\n## in console\nfunction_name\n## in View pane (easier to read, syntax highlighting)\nView(function_name)\n```\n:::\n\n\n## Within R: `help.search`\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# when ?function_name fails (e.g. don't have package loaded)\nhelp.search(\"function_name\") # note quotation marks\n??function_name\n\n# for when you can't quite remember the function name\n??something_like_function_name\n\n# R help start page\nhelp.start()\n## note that using the RStudio Help home button gives even more resources\n```\n:::\n\n\n## Within R: Help with package\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# `help`\nhelp(package = \"package_name\")\n# Help panel in RStudio will give links to all documentation\n# and help pages for that package\n\n# find/browse vignettes for installed (or specific) packages\nbrowseVignettes()\nbrowseVignettes(\"package_name\")\n\n# use auto-completion in RStudio to see what functions \n# are in a package\n?package::\n```\n:::\n\n\n**dplyr** demo\n\nRStudio Help home demo\n\n::: notes\nhelp(package = \"dplyr\") # look at various pages\n?dplyr::\n:::\n\n## Your turn\n\n-   Create an R project called \"R-foundations\"\n\n-   Install the packages **palmerpenguins** and **tidyverse**\n\n-   Find the help page for the `penguins` dataset\n\n-   Find the help page for the `filter` function in the `dplyr` package\n\n-   Experiment typing commands into the console or in an R script.\n\nlink to [slides](https://warwick-stats-resources.github.io/R-foundations/slides/01-intro/#/title-slide){target=\"_blank\"}\n\n## Getting help at Warwick\n\n### Any time\n\n-   The [Warwick R Users Viva Engage](https://web.yammer.com/main/org/warwick.ac.uk/groups/eyJfdHlwZSI6Ikdyb3VwIiwiaWQiOiIxMTk5MzIzODczMjgifQ/all)\n\n### By appointment\n\n-   Research computing drop-in: <https://warwick.ac.uk/research/rtp/sc/user_support/research-computing-drop-in/>\n    - Contact Heather at <h.turner.1@warwick.ac.uk> to arrange a meeting.\n\n#  {#penguin-questions data-menu-title=\"What can we learn about penguins?\" background-image=\"images/gentoo.jpeg\"}\n\n::: columns\n::: {.column width=\"50%\"}\n[What can we learn about penguins?]{#penguin-slide-text}\n:::\n\n::: {.column width=\"50%\"}\n:::\n:::\n\n## The data\n\n::: smaller90\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlibrary(palmerpenguins)\nlibrary(tidyverse)\n```\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\npenguins\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 344 × 8\n   species island    bill_length_mm bill_depth_mm flipper_length_mm body_mass_g\n   <fct>   <fct>              <dbl>         <dbl>             <int>       <int>\n 1 Adelie  Torgersen           39.1          18.7               181        3750\n 2 Adelie  Torgersen           39.5          17.4               186        3800\n 3 Adelie  Torgersen           40.3          18                 195        3250\n 4 Adelie  Torgersen           NA            NA                  NA          NA\n 5 Adelie  Torgersen           36.7          19.3               193        3450\n 6 Adelie  Torgersen           39.3          20.6               190        3650\n 7 Adelie  Torgersen           38.9          17.8               181        3625\n 8 Adelie  Torgersen           39.2          19.6               195        4675\n 9 Adelie  Torgersen           34.1          18.1               193        3475\n10 Adelie  Torgersen           42            20.2               190        4250\n# ℹ 334 more rows\n# ℹ 2 more variables: sex <fct>, year <int>\n```\n\n\n:::\n:::\n\n:::\n\n## How many of each species?\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ncount(penguins, species)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 2\n  species       n\n  <fct>     <int>\n1 Adelie      152\n2 Chinstrap    68\n3 Gentoo      124\n```\n\n\n:::\n:::\n\n\n## How many of each species on each island?\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ncount(penguins, species, island, .drop = FALSE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 9 × 3\n  species   island        n\n  <fct>     <fct>     <int>\n1 Adelie    Biscoe       44\n2 Adelie    Dream        56\n3 Adelie    Torgersen    52\n4 Chinstrap Biscoe        0\n5 Chinstrap Dream        68\n6 Chinstrap Torgersen     0\n7 Gentoo    Biscoe      124\n8 Gentoo    Dream         0\n9 Gentoo    Torgersen     0\n```\n\n\n:::\n:::\n\n\n::: notes\n.drop = FALSE to show count even if zero\n:::\n\n## Show me the bill dimensions of the 5 heaviest female Gentoo penguins\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\npenguins |>\n  filter(sex == \"female\",\n         species == \"Gentoo\") |>\n  slice_max(body_mass_g, n = 5) |>\n  select(contains(\"bill\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 5 × 2\n  bill_length_mm bill_depth_mm\n           <dbl>         <dbl>\n1           46.5          14.8\n2           45.2          14.8\n3           49.1          14.8\n4           44.9          13.3\n5           45.1          14.5\n```\n\n\n:::\n:::\n\n\n## The native pipe\n\n`|>` is a pipe.\n\nIt passes what comes before into the first argument of what comes after.\n\nPipes are a powerful tool for clearly expressing a sequence of multiple operations.\n\nWe'll talk more about pipes in the data wrangling session.\n\n## What's the mean bill length, by species?\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\npenguins |>\n  summarise(mean_bill_length = mean(bill_length_mm, na.rm = TRUE),\n            .by = species)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 2\n  species   mean_bill_length\n  <fct>                <dbl>\n1 Adelie                38.8\n2 Gentoo                47.5\n3 Chinstrap             48.8\n```\n\n\n:::\n:::\n\n\n## What's the relationship between bill length and depth? {.smaller80}\n\n::: panel-tabset\n### picture\n\n![Artwork by Allison Horst <https://allisonhorst.github.io/palmerpenguins/articles/art.html>](images/culmen_depth.png){width=\"50%\"}\n\n### plot 1\n\n![](%60r%20knitr::fig_chunk(%22bill-no-species%22,%20%22png%22)%60){width=\"80%\"}\n\n### code 1\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nggplot(data = penguins,\n       aes(x = bill_length_mm,\n           y = bill_depth_mm)) +\n  geom_point() +\n  geom_smooth(method = \"lm\", se = FALSE, color = \"gray50\") +\n  labs(title = \"Penguin bill dimensions\",\n       subtitle = \"Bill length and depth for Penguins at Palmer Station LTER\",\n       x = \"Bill length (mm)\",\n       y = \"Bill depth (mm)\") +\n  theme_minimal() + \n  theme(plot.title.position = \"plot\")\n```\n:::\n\n\n### plot 2\n\n![](%60r%20knitr::fig_chunk(%22bill-species%22,%20%22png%22)%60){width=\"80%\"}\n\n### code 2\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code .code-overflow-wrap}\nggplot(data = penguins,\n       aes(x = bill_length_mm,\n           y = bill_depth_mm,\n           group = species)) +\n  geom_point(aes(color = species, \n                 shape = species),\n             size = 3,\n             alpha = 0.8) +\n  geom_smooth(method = \"lm\", se = FALSE, aes(color = species)) +\n  scale_color_manual(values = c(\"darkorange\",\"purple\",\"cyan4\")) +\n  labs(title = \"Penguin bill dimensions\",\n       subtitle = \"Bill length and depth for Adelie, Chinstrap and Gentoo Penguins at Palmer Station LTER\",\n       x = \"Bill length (mm)\",\n       y = \"Bill depth (mm)\",\n       color = \"Penguin species\",\n       shape = \"Penguin species\") +\n  theme_minimal() +\n  theme(plot.title.position = \"plot\",\n        plot.subtitle = element_text(size = rel(0.95)))\n```\n:::\n\n\n### what?\n\nThis is an illustration of [Simpson's Paradox](https://en.wikipedia.org/wiki/Simpson's_paradox){target=\"_blank\"}.\n\n> Simpson's paradox is a phenomenon in probability and statistics in which a trend appears in several groups of data but disappears or reverses when the groups are combined.\n:::\n\n[Example adapted from https://allisonhorst.github.io/palmerpenguins/articles/examples.html](https://allisonhorst.github.io/palmerpenguins/articles/examples.html){style=\"font-size: 50%\"}\n\n# End matter {.inverse}\n\n## Resources\n\nMaterial inspired by and remixed from:\n\n-   <https://www.heatherturner.net/teaching/zero-to-hero/#1>\n\n-   <https://ellakaye.github.io/Rladies-Coventry-getting-help-in-R/getting_help_in_R.html#1>\n\n-   <https://portal.stats.ox.ac.uk/userdata/ruth/APTS2013/Rcourse1.pdf>\n\n-   <https://carpentries-incubator.github.io/r-tidyverse-4-datasets/>\n\n::: notes\nSee also resources on session webpage (under slide embed)\n - example webpages for specific tidyverse packages.\n - usethis::browse_package() to open e.g. open dplyr package website\n - customise appearance of RStudio\n:::\n\n## License\n\nLicensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License ([CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/){target=\"_blank\"}).\n\n\n```{=html}\n<!-- needs to be last chunk of presentation otherwise creates an extra slide -->\n<!-- requires Quarto v1.3 -->\n<!-- tint80 for border, tint20 for title -->\n<!-- this should hopefully no longer be necessary in Quarto 1.4 -->\n<!-- https://github.com/quarto-dev/quarto-cli/issues/5038 -->\n<style type=\"text/css\">\ndiv.callout-note {\n  border-left-color: #336695 !important;\n}\n\ndiv.callout-note.callout-style-default .callout-title {\n  background-color: #CCD9E4 !important;\n}\n\ndiv.callout-caution {\n  border-left-color: #AE4240 !important;\n}\n\ndiv.callout-caution.callout-style-default .callout-title {\n  background-color: #ebd0cf !important;\n}\n\ndiv.callout-tip {\n  border-left-color: #618157 !important;\n}\n\ndiv.callout-tip.callout-style-default .callout-title {\n  background-color: #d8e0d5 !important;\n}\n\ndiv.callout-important {\n  border-left-color: #775781 !important;\n}\n\ndiv.callout-important.callout-style-default .callout-title {\n  background-color: #ddd5e0 !important;\n}\n\ndiv.callout-warning {\n  border-left-color: #956133 !important;\n}\n\ndiv.callout-warning.callout-style-default .callout-title {\n  background-color: #e4d8cc !important;\n}\n</style>\n```\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}