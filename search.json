[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "R for Data Science",
    "section": "",
    "text": "Welcome to the R for Data Science course for 2024!\nThis course is taking place as part of the University of Warwick’s 2024 Spring Training Week, organised by the SCRPT."
  },
  {
    "objectID": "index.html#syllabus-overview",
    "href": "index.html#syllabus-overview",
    "title": "R for Data Science",
    "section": "Syllabus overview",
    "text": "Syllabus overview\nThis is a beginner’s level course in R, assuming no prior knowledge. We’ll introduce the R programming language and RStudio, a popular IDE (integrated development environment) in which to work. We’ll cover data types and structures in the core of the R language. We’ll also introduce the tidyverse, a well-established set of packages designed for data science, and show how they can be used to import and wrangle data. We’ll also introduce you to R’s powerful graphics capabilities, for producing production quality plots and tables. Finally, we’ll offer a brief introduction to Quarto, an open-source scientific and technical publishing system, which allows the interweaving of code and text to create reproducible documents, presentations and more.\nAlthough no prior knowledge of R is assumed, we do ask that you follow these prerequisites, to ensure that you have all necessary software installed prior to the course.\nAll slides and further resources can be accessed from the content page and also via the schedule."
  },
  {
    "objectID": "index.html#session-details",
    "href": "index.html#session-details",
    "title": "R for Data Science",
    "section": "Session details",
    "text": "Session details\n   Thursday, March 21st, 2024\n   9:30 – 16:30\n   A1.25 Millburn\n   See the full schedule.\nPlease see the join page for more details on how to attend the course."
  },
  {
    "objectID": "index.html#instructor-details",
    "href": "index.html#instructor-details",
    "title": "R for Data Science",
    "section": "Instructor details",
    "text": "Instructor details\n   Heather Turner\n   h.turner.1@warwick.ac.uk"
  },
  {
    "objectID": "index.html#prerequistes",
    "href": "index.html#prerequistes",
    "title": "R for Data Science",
    "section": "Prerequistes",
    "text": "Prerequistes\nPlease see the prerequisites page for details on getting set up in advance of the workshop."
  },
  {
    "objectID": "slides/02-intro/index.html#overview",
    "href": "slides/02-intro/index.html#overview",
    "title": "Introduction to R and RStudio",
    "section": "Overview",
    "text": "Overview\n\nWhy use R?\nUse RStudio to write and run R programmes\nCreate and start an R project\nUse install.packages() to install packages\nHow to get help in R\nSee examples of data wrangling and visualisation"
  },
  {
    "objectID": "slides/02-intro/index.html#what-can-r-do",
    "href": "slides/02-intro/index.html#what-can-r-do",
    "title": "Introduction to R and RStudio",
    "section": "What can R do?",
    "text": "What can R do?\n\n\n\nData import\nData management and wrangling\nExploratory data analysis\nStatistical modelling\nAdvanced statistics\nMachine learning\n\n\n\nData visualisation\nReports, articles\nDashboards, web apps\nIntegrates well with other languages\nPackages: share your code and use others"
  },
  {
    "objectID": "slides/02-intro/index.html#the-r-ecosystem",
    "href": "slides/02-intro/index.html#the-r-ecosystem",
    "title": "Introduction to R and RStudio",
    "section": "The R Ecosystem",
    "text": "The R Ecosystem\nBase R\n\n\n15 base packages\n\nCreate R objects\nSummaries\nMaths functions\nStatistics\nGraphics\nDatasets\n\n\n15 recommended packages\n\nStatistics methodology\nMore maths\nMore graphics\n\n\n\n\nR is distributed with fifteen “base packages”: base, compiler, datasets, grDevices, graphics, grid, methods, parallel, splines, stats, stats4, tcltk, tools, translations, and utils.\nIn addition, there are fifteen “recommended packages” from CRAN which are included with binary distributions of R: KernSmooth, MASS, Matrix, boot, class, cluster, codetools, foreign, lattice, mgcv, nlme, nnet, rpart, spatial, and survival.\nhttps://en.wikipedia.org/wiki/R_package#Base_and_recommended_packages"
  },
  {
    "objectID": "slides/02-intro/index.html#the-r-ecosystem-1",
    "href": "slides/02-intro/index.html#the-r-ecosystem-1",
    "title": "Introduction to R and RStudio",
    "section": "The R Ecosystem",
    "text": "The R Ecosystem\nContributed packages\n\n\nCRAN\n\nOfficial R repository\nhttps://cran.r-project.org\nnearly 20000 packages\n\n\nBioconductor\n\nBioinformatics packages\nhttps://www.bioconductor.org\n~2100 packages\n\n\n\nGitHub\n\nPackages in development\nGitHub-only packages"
  },
  {
    "objectID": "slides/02-intro/index.html#the-tidyverse",
    "href": "slides/02-intro/index.html#the-tidyverse",
    "title": "Introduction to R and RStudio",
    "section": "The tidyverse",
    "text": "The tidyverse\nThe tidyverse is an opinionated collection of R packages designed for data science. All packages share an underlying design philosophy, grammar and data structures.\n\nFrom https://education.rstudio.com/blog/2020/07/teaching-the-tidyverse-in-2020-part-1-getting-started/tidyverse 2.0.0. includes lubridate for date-times as well (not shown in image)."
  },
  {
    "objectID": "slides/02-intro/index.html#palmerpenguins",
    "href": "slides/02-intro/index.html#palmerpenguins",
    "title": "Introduction to R and RStudio",
    "section": "palmerpenguins",
    "text": "palmerpenguins\n\npalmerpenguins is a dataset package, designed to be a great example for data exploration and visualisation.\nIt contains measurement data for 344 penguins, from three different species, collected from three islands in the Palmer Archipelago, Antarctica.\n\n\nPenguin artwork by Allison Horst https://allisonhorst.github.io/palmerpenguins/articles/art.html"
  },
  {
    "objectID": "slides/02-intro/index.html#the-r-community",
    "href": "slides/02-intro/index.html#the-r-community",
    "title": "Introduction to R and RStudio",
    "section": "The R community",
    "text": "The R community\nAnother reason to love R is the community around it.\nIt prides itself on being friendly, diverse, helpful, and supportive.\n\nR user groups, especially Warwick RUG\nRLadies, especially RLadies Coventry\nRStudio Community\nR for Data Science\n#RStats and #TidyTuesday on Mastodon\nrainbowR (LGBTQ+)\nMiR (minorities in R)"
  },
  {
    "objectID": "slides/02-intro/index.html#at-first",
    "href": "slides/02-intro/index.html#at-first",
    "title": "Introduction to R and RStudio",
    "section": "At first",
    "text": "At first"
  },
  {
    "objectID": "slides/02-intro/index.html#with-script",
    "href": "slides/02-intro/index.html#with-script",
    "title": "Introduction to R and RStudio",
    "section": "With script",
    "text": "With script\n RStudio cheatsheet"
  },
  {
    "objectID": "slides/02-intro/index.html#best-practice-use-r-projects",
    "href": "slides/02-intro/index.html#best-practice-use-r-projects",
    "title": "Introduction to R and RStudio",
    "section": "Best practice: use R projects",
    "text": "Best practice: use R projects\nAn RStudio project is a contect for working on a specific project\n\nKeeps files well-organised\nAutomatically sets working directory to project root\nHas separate workspace and command history\nWorks well with version control via git or svn"
  },
  {
    "objectID": "slides/02-intro/index.html#getting-started-with-projects",
    "href": "slides/02-intro/index.html#getting-started-with-projects",
    "title": "Introduction to R and RStudio",
    "section": "Getting started with projects",
    "text": "Getting started with projects\n\nCreate a project from a new or existing directory via the file menu or new project button\nSwitch project, or open a different project in a new RStudio instance via the project menu"
  },
  {
    "objectID": "slides/02-intro/index.html#rstudio-project-demo",
    "href": "slides/02-intro/index.html#rstudio-project-demo",
    "title": "Introduction to R and RStudio",
    "section": "RStudio project demo",
    "text": "RStudio project demo\n\nCreate R-Foundations project\nCreate first script"
  },
  {
    "objectID": "slides/02-intro/index.html#using-the-console",
    "href": "slides/02-intro/index.html#using-the-console",
    "title": "Introduction to R and RStudio",
    "section": "Using the console",
    "text": "Using the console\n\nFor things that only need doing once, e.g. installing packages\nFor doing things you don’t need to track, e.g. requesting help files\nTo quickly explore new ideas before adding them to a script"
  },
  {
    "objectID": "slides/02-intro/index.html#using-the-console-shortcuts",
    "href": "slides/02-intro/index.html#using-the-console-shortcuts",
    "title": "Introduction to R and RStudio",
    "section": "Using the console: shortcuts",
    "text": "Using the console: shortcuts\nRStudio provides a few shortcuts to help write code in the R console\n\n↑/↓ go back/forward through history one command at a time\nCtrl/⌘ + ↑ review recent history and select command\nTab view possible completions for part-written expression\n\nCode completion (using Tab) is also provided in the source editor"
  },
  {
    "objectID": "slides/02-intro/index.html#using-the-console-demo",
    "href": "slides/02-intro/index.html#using-the-console-demo",
    "title": "Introduction to R and RStudio",
    "section": "Using the console: demo",
    "text": "Using the console: demo\n1 + 1\n?log\nlog(10)\nexp(-4 * 4 / 2) / sqrt(2 * pi)\ninstall.packages(\"tidyverse\")\ninstall.packages(\"palmerpenguins\")"
  },
  {
    "objectID": "slides/02-intro/index.html#using-scripts",
    "href": "slides/02-intro/index.html#using-scripts",
    "title": "Introduction to R and RStudio",
    "section": "Using scripts",
    "text": "Using scripts\nText files saved with an .R suffix are recognised as R code\nCode can be sent directly from a script to the console as follows:\n\nCtrl/⌘ + ↵ or  run current line\n\nRun multiple lines by selecting first\n\nCtrl/⌘ + Shift + ↵ or \n\nRun the script from start to finish."
  },
  {
    "objectID": "slides/02-intro/index.html#why-r-scripts",
    "href": "slides/02-intro/index.html#why-r-scripts",
    "title": "Introduction to R and RStudio",
    "section": "Why R scripts?",
    "text": "Why R scripts?\nWriting an R script for an analysis has several advantages over a graphical user interface (GUI)\n\nIt provides a record of the exact approach used in an analysis\nIt enables the analysis to be easily reproduced and modified\nIt allows greater control"
  },
  {
    "objectID": "slides/02-intro/index.html#good-practice-for-r-scripts",
    "href": "slides/02-intro/index.html#good-practice-for-r-scripts",
    "title": "Introduction to R and RStudio",
    "section": "Good practice for R Scripts",
    "text": "Good practice for R Scripts\nOrganising your R script well will help you and others understand and use it.\n\nAdd comment or two at start to describe purpose of script\n\nUse one or more # to start a comment\n\nLoad required data and packages at the start\nAvoid hard-coding: define variables such as file paths early on\nGive functions and variable meaningful names\nuse ### or #--- to separate sections (in RStudio Code &gt; Insert Section)"
  },
  {
    "objectID": "slides/02-intro/index.html#installing-packages",
    "href": "slides/02-intro/index.html#installing-packages",
    "title": "Introduction to R and RStudio",
    "section": "Installing packages",
    "text": "Installing packages\nIn console\n\nInstall a package with install.packages(\"package_name\")\n\nWatch out for the plural!\n\nInstall multiple packages with install.packages(c(\"package1\", \"package2\"))\n\nThe c() function creates a vector\n\nOr use install button in packages pane:"
  },
  {
    "objectID": "slides/02-intro/index.html#loading-packages",
    "href": "slides/02-intro/index.html#loading-packages",
    "title": "Introduction to R and RStudio",
    "section": "Loading packages",
    "text": "Loading packages\nIn script\n\nLoad packages with library(package_name)"
  },
  {
    "objectID": "slides/02-intro/index.html#r-script-demo",
    "href": "slides/02-intro/index.html#r-script-demo",
    "title": "Introduction to R and RStudio",
    "section": "R script demo",
    "text": "R script demo\n### load packages\nlibrary(palmerpenguins)\nlibrary(tidyverse)\n\n### Inspect data\nView(penguins)\nglimpse(penguins)\nhead(penguins)\nsummary(penguins)"
  },
  {
    "objectID": "slides/02-intro/index.html#within-r-help-with-functions",
    "href": "slides/02-intro/index.html#within-r-help-with-functions",
    "title": "Introduction to R and RStudio",
    "section": "Within R: Help with functions",
    "text": "Within R: Help with functions\n\n# help with a specific function\nhelp(function_name)\n?function_name\n\n# quick reminder of the function arguments\narg(function_name)\n\n# see an example\nexample(function_name)\n\n# see the source code\n## in console\nfunction_name\n## in View pane (easier to read, syntax highlighting)\nView(function_name)"
  },
  {
    "objectID": "slides/02-intro/index.html#within-r-help.search",
    "href": "slides/02-intro/index.html#within-r-help.search",
    "title": "Introduction to R and RStudio",
    "section": "Within R: help.search",
    "text": "Within R: help.search\n\n# when ?function_name fails (e.g. don't have package loaded)\nhelp.search(\"function_name\") # note quotation marks\n??function_name\n\n# for when you can't quite remember the function name\n??something_like_function_name\n\n# R help start page\nhelp.start()\n## note that using the RStudio Help home button gives even more resources"
  },
  {
    "objectID": "slides/02-intro/index.html#within-r-help-with-package",
    "href": "slides/02-intro/index.html#within-r-help-with-package",
    "title": "Introduction to R and RStudio",
    "section": "Within R: Help with package",
    "text": "Within R: Help with package\n\n# `help`\nhelp(package = \"package_name\")\n# Help panel in RStudio will give links to all documentation\n# and help pages for that package\n\n# find/browse vignettes for installed (or specific) packages\nbrowseVignettes()\nbrowseVignettes(\"package_name\")\n\n# use auto-completion in RStudio to see what functions \n# are in a package\n?package::\n\ndplyr demo\nRStudio Help home demo"
  },
  {
    "objectID": "slides/02-intro/index.html#your-turn",
    "href": "slides/02-intro/index.html#your-turn",
    "title": "Introduction to R and RStudio",
    "section": "Your turn",
    "text": "Your turn\n\nCreate an R project called “R-foundations”\nInstall the packages palmerpenguins and tidyverse\nFind the help page for the penguins dataset\nFind the help page for the filter function in the dplyr package\nExperiment typing commands into the console or in an R script.\n\nlink to slides"
  },
  {
    "objectID": "slides/02-intro/index.html#getting-help-at-warwick",
    "href": "slides/02-intro/index.html#getting-help-at-warwick",
    "title": "Introduction to R and RStudio",
    "section": "Getting help at Warwick",
    "text": "Getting help at Warwick\nDuring the course\n\nClinic hours: Thursday 10-11 in weeks 3, 5 and 9.\n\nIn general\n\nThe Warwick R Users Viva Engage"
  },
  {
    "objectID": "slides/02-intro/index.html#the-data",
    "href": "slides/02-intro/index.html#the-data",
    "title": "Introduction to R and RStudio",
    "section": "The data",
    "text": "The data\n\n\nlibrary(palmerpenguins)\nlibrary(tidyverse)\n\n\npenguins\n\n# A tibble: 344 × 8\n   species island    bill_length_mm bill_depth_mm flipper_length_mm body_mass_g\n   &lt;fct&gt;   &lt;fct&gt;              &lt;dbl&gt;         &lt;dbl&gt;             &lt;int&gt;       &lt;int&gt;\n 1 Adelie  Torgersen           39.1          18.7               181        3750\n 2 Adelie  Torgersen           39.5          17.4               186        3800\n 3 Adelie  Torgersen           40.3          18                 195        3250\n 4 Adelie  Torgersen           NA            NA                  NA          NA\n 5 Adelie  Torgersen           36.7          19.3               193        3450\n 6 Adelie  Torgersen           39.3          20.6               190        3650\n 7 Adelie  Torgersen           38.9          17.8               181        3625\n 8 Adelie  Torgersen           39.2          19.6               195        4675\n 9 Adelie  Torgersen           34.1          18.1               193        3475\n10 Adelie  Torgersen           42            20.2               190        4250\n# ℹ 334 more rows\n# ℹ 2 more variables: sex &lt;fct&gt;, year &lt;int&gt;"
  },
  {
    "objectID": "slides/02-intro/index.html#how-many-of-each-species",
    "href": "slides/02-intro/index.html#how-many-of-each-species",
    "title": "Introduction to R and RStudio",
    "section": "How many of each species?",
    "text": "How many of each species?\n\ncount(penguins, species)\n\n# A tibble: 3 × 2\n  species       n\n  &lt;fct&gt;     &lt;int&gt;\n1 Adelie      152\n2 Chinstrap    68\n3 Gentoo      124"
  },
  {
    "objectID": "slides/02-intro/index.html#how-many-of-each-species-on-each-island",
    "href": "slides/02-intro/index.html#how-many-of-each-species-on-each-island",
    "title": "Introduction to R and RStudio",
    "section": "How many of each species on each island?",
    "text": "How many of each species on each island?\n\ncount(penguins, species, island, .drop = FALSE)\n\n# A tibble: 9 × 3\n  species   island        n\n  &lt;fct&gt;     &lt;fct&gt;     &lt;int&gt;\n1 Adelie    Biscoe       44\n2 Adelie    Dream        56\n3 Adelie    Torgersen    52\n4 Chinstrap Biscoe        0\n5 Chinstrap Dream        68\n6 Chinstrap Torgersen     0\n7 Gentoo    Biscoe      124\n8 Gentoo    Dream         0\n9 Gentoo    Torgersen     0"
  },
  {
    "objectID": "slides/02-intro/index.html#show-me-the-bill-dimensions-of-the-5-heaviest-female-gentoo-penguins",
    "href": "slides/02-intro/index.html#show-me-the-bill-dimensions-of-the-5-heaviest-female-gentoo-penguins",
    "title": "Introduction to R and RStudio",
    "section": "Show me the bill dimensions of the 5 heaviest female Gentoo penguins",
    "text": "Show me the bill dimensions of the 5 heaviest female Gentoo penguins\n\npenguins |&gt;\n  filter(sex == \"female\",\n         species == \"Gentoo\") |&gt;\n  slice_max(body_mass_g, n = 5) |&gt;\n  select(contains(\"bill\"))\n\n# A tibble: 5 × 2\n  bill_length_mm bill_depth_mm\n           &lt;dbl&gt;         &lt;dbl&gt;\n1           46.5          14.8\n2           45.2          14.8\n3           49.1          14.8\n4           44.9          13.3\n5           45.1          14.5"
  },
  {
    "objectID": "slides/02-intro/index.html#the-native-pipe",
    "href": "slides/02-intro/index.html#the-native-pipe",
    "title": "Introduction to R and RStudio",
    "section": "The native pipe",
    "text": "The native pipe\n|&gt; is a pipe.\nIt passes what comes before into the first argument of what comes after.\nPipes are a powerful tool for clearly expressing a sequence of multiple operations.\nWe’ll talk more about pipes in the data wrangling session."
  },
  {
    "objectID": "slides/02-intro/index.html#whats-the-mean-bill-length-by-species",
    "href": "slides/02-intro/index.html#whats-the-mean-bill-length-by-species",
    "title": "Introduction to R and RStudio",
    "section": "What’s the mean bill length, by species?",
    "text": "What’s the mean bill length, by species?\n\npenguins |&gt;\n  summarise(mean_bill_length = mean(bill_length_mm, na.rm = TRUE),\n            .by = species)\n\n# A tibble: 3 × 2\n  species   mean_bill_length\n  &lt;fct&gt;                &lt;dbl&gt;\n1 Adelie                38.8\n2 Gentoo                47.5\n3 Chinstrap             48.8"
  },
  {
    "objectID": "slides/02-intro/index.html#whats-the-relationship-between-bill-length-and-depth",
    "href": "slides/02-intro/index.html#whats-the-relationship-between-bill-length-and-depth",
    "title": "Introduction to R and RStudio",
    "section": "What’s the relationship between bill length and depth?",
    "text": "What’s the relationship between bill length and depth?\n\npictureplot 1code 1plot 2code 2what?\n\n\n\n\n\nArtwork by Allison Horst https://allisonhorst.github.io/palmerpenguins/articles/art.html\n\n\n\n\n\n\n\n\nggplot(data = penguins,\n       aes(x = bill_length_mm,\n           y = bill_depth_mm)) +\n  geom_point() +\n  geom_smooth(method = \"lm\", se = FALSE, color = \"gray50\") +\n  labs(title = \"Penguin bill dimensions\",\n       subtitle = \"Bill length and depth for Penguins at Palmer Station LTER\",\n       x = \"Bill length (mm)\",\n       y = \"Bill depth (mm)\") +\n  theme_minimal() + \n  theme(plot.title.position = \"plot\")\n\n\n\n\n\n\n\nggplot(data = penguins,\n       aes(x = bill_length_mm,\n           y = bill_depth_mm,\n           group = species)) +\n  geom_point(aes(color = species, \n                 shape = species),\n             size = 3,\n             alpha = 0.8) +\n  geom_smooth(method = \"lm\", se = FALSE, aes(color = species)) +\n  scale_color_manual(values = c(\"darkorange\",\"purple\",\"cyan4\")) +\n  labs(title = \"Penguin bill dimensions\",\n       subtitle = \"Bill length and depth for Adelie, Chinstrap and Gentoo Penguins at Palmer Station LTER\",\n       x = \"Bill length (mm)\",\n       y = \"Bill depth (mm)\",\n       color = \"Penguin species\",\n       shape = \"Penguin species\") +\n  theme_minimal() +\n  theme(plot.title.position = \"plot\",\n        plot.subtitle = element_text(size = rel(0.95)))\n\n\n\nThis is an illustration of Simpson’s Paradox.\n\nSimpson’s paradox is a phenomenon in probability and statistics in which a trend appears in several groups of data but disappears or reverses when the groups are combined.\n\n\n\n\nExample adapted from https://allisonhorst.github.io/palmerpenguins/articles/examples.html"
  },
  {
    "objectID": "slides/02-intro/index.html#resources",
    "href": "slides/02-intro/index.html#resources",
    "title": "Introduction to R and RStudio",
    "section": "Resources",
    "text": "Resources\nMaterial inspired by and remixed from:\n\nhttps://www.heatherturner.net/teaching/zero-to-hero/#1\nhttps://ellakaye.github.io/Rladies-Coventry-getting-help-in-R/getting_help_in_R.html#1\nhttps://portal.stats.ox.ac.uk/userdata/ruth/APTS2013/Rcourse1.pdf\nhttps://carpentries-incubator.github.io/r-tidyverse-4-datasets/"
  },
  {
    "objectID": "slides/02-intro/index.html#license",
    "href": "slides/02-intro/index.html#license",
    "title": "Introduction to R and RStudio",
    "section": "License",
    "text": "License\nLicensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License (CC BY-NC-SA 4.0)."
  },
  {
    "objectID": "slides/01-welcome/index.html#your-instructor",
    "href": "slides/01-welcome/index.html#your-instructor",
    "title": "Welcome and Introduction",
    "section": "Your instructor",
    "text": "Your instructor\n\n\nHeather Turner\nRSE Fellow, Department of Statistics\nUniversity of Warwick\nhttps://warwick.ac.uk/heatherturner"
  },
  {
    "objectID": "slides/01-welcome/index.html#course-material",
    "href": "slides/01-welcome/index.html#course-material",
    "title": "Welcome and Introduction",
    "section": "Course material",
    "text": "Course material\n\nWebsite and slides\nhttps://Warwick-Stats-Resources.github.io/r-for-data-science\nWebsite and slides repo\nhttps://github.com/Warwick-Stats-Resources/r-for-data-science"
  },
  {
    "objectID": "slides/01-welcome/index.html#schedule",
    "href": "slides/01-welcome/index.html#schedule",
    "title": "Welcome and Introduction",
    "section": "Schedule",
    "text": "Schedule\n\n\n\n\nTime\nSession\n\n\n\n\n09:30–10:00\nCoffee\n\n\n10:00–10:10\nWelcome!\n\n\n10:10–11:25\nIntroduction to R and RStudio\n\n\n11:25–11:40\nCoffee\n\n\n11:40–13:00\nData Types, Structures and Wrangling\n\n\n13:00–13:30\nLunch\n\n\n13:30–15:00\nGraphics\n\n\n15:00–15:15\nCoffee\n\n\n15:15–16:30\nQuarto"
  },
  {
    "objectID": "slides/04-graphics/index.html#overview",
    "href": "slides/04-graphics/index.html#overview",
    "title": "Graphics",
    "section": "Overview",
    "text": "Overview\n\nPlots in base R\nggplot2\nTables"
  },
  {
    "objectID": "slides/04-graphics/index.html#packages",
    "href": "slides/04-graphics/index.html#packages",
    "title": "Graphics",
    "section": "Packages",
    "text": "Packages\n\nlibrary(ggplot2) # for later in the session\nlibrary(palmerpenguins)"
  },
  {
    "objectID": "slides/04-graphics/index.html#no-frills",
    "href": "slides/04-graphics/index.html#no-frills",
    "title": "Graphics",
    "section": "No frills",
    "text": "No frills\nBase R graphics are useful for quick, exploratory “no-frills” plots.\n(For anything better looking or more complex or where you want more control, use ggplot2)"
  },
  {
    "objectID": "slides/04-graphics/index.html#boxplots",
    "href": "slides/04-graphics/index.html#boxplots",
    "title": "Graphics",
    "section": "Boxplots",
    "text": "Boxplots\n\nExample 1Example 2\n\n\n\nboxplot(penguins$body_mass_g)\n\n\n\n\n\n\n\n\n\n\n\nwith(penguins, boxplot(body_mass_g ~ species))"
  },
  {
    "objectID": "slides/04-graphics/index.html#histogramdensity",
    "href": "slides/04-graphics/index.html#histogramdensity",
    "title": "Graphics",
    "section": "Histogram/Density",
    "text": "Histogram/Density\n\nHistogramDensity\n\n\n\nhist(penguins$body_mass_g)\n\n\n\n\n\n\n\n\n\n\n\nplot(density(penguins$body_mass_g, na.rm = TRUE))"
  },
  {
    "objectID": "slides/04-graphics/index.html#scatterplots",
    "href": "slides/04-graphics/index.html#scatterplots",
    "title": "Graphics",
    "section": "Scatterplots",
    "text": "Scatterplots\n\nVectorsData frame\n\n\n\nplot(1:10, 1:10)\n\n\n\n\n\n\n\n\n\n\n\nplot(bill_length_mm ~ bill_depth_mm, \n     data = penguins)"
  },
  {
    "objectID": "slides/04-graphics/index.html#plot-methods",
    "href": "slides/04-graphics/index.html#plot-methods",
    "title": "Graphics",
    "section": "Plot methods",
    "text": "Plot methods\nMany different objects in R have defined plot methods:\n\nmethods(plot)\n\n [1] plot,ANY-method     plot,color-method   plot.acf*          \n [4] plot.data.frame*    plot.decomposed.ts* plot.default       \n [7] plot.dendrogram*    plot.density*       plot.ecdf          \n[10] plot.factor*        plot.formula*       plot.function      \n[13] plot.ggplot*        plot.gtable*        plot.hcl_palettes* \n[16] plot.hclust*        plot.histogram*     plot.HoltWinters*  \n[19] plot.isoreg*        plot.lm*            plot.medpolish*    \n[22] plot.mlm*           plot.ppr*           plot.prcomp*       \n[25] plot.princomp*      plot.profile.nls*   plot.R6*           \n[28] plot.raster*        plot.spec*          plot.stepfun       \n[31] plot.stl*           plot.table*         plot.trans*        \n[34] plot.ts             plot.tskernel*      plot.TukeyHSD*     \nsee '?methods' for accessing help and source code\n\n\ne.g. if you call plot on an object of type lm, it will call plot.lm"
  },
  {
    "objectID": "slides/04-graphics/index.html#linear-model-diagnostic-fits",
    "href": "slides/04-graphics/index.html#linear-model-diagnostic-fits",
    "title": "Graphics",
    "section": "Linear model diagnostic fits",
    "text": "Linear model diagnostic fits\n\nfit &lt;- lm(bill_length_mm ~ bill_depth_mm, \n          data = penguins, subset = species == \"Gentoo\")\n\npar(mfrow=c(2,2)) # see all four plots together\nplot(fit)"
  },
  {
    "objectID": "slides/04-graphics/index.html#your-turn",
    "href": "slides/04-graphics/index.html#your-turn",
    "title": "Graphics",
    "section": "Your turn!",
    "text": "Your turn!\nFrom the starting point of plot(1:10, 1:10), experiment with the arguments type and pch. See ?plot\nCan you create a plot with triangular points linked by lines?\nCan you do the same with the lines() function? What are the similarities and differences?"
  },
  {
    "objectID": "slides/04-graphics/index.html#intro-to-ggplot2",
    "href": "slides/04-graphics/index.html#intro-to-ggplot2",
    "title": "Graphics",
    "section": "Intro to ggplot2",
    "text": "Intro to ggplot2\nFrom https://ggplot2.tidyverse.org:\n\nR has several systems for making graphs, but ggplot2 is one of the most elegant and most versatile. ggplot2 implements the grammar of graphics, a coherent system for describing and building graphs. With ggplot2, you can do more faster by learning one system and applying it in many places.\n\nFrom https://r4ds.had.co.nz/data-visualisation.html:\n\nYou provide the data, tell ggplot2 how to map variables to aesthetics, what graphical primitives to use, and it takes care of the details."
  },
  {
    "objectID": "slides/04-graphics/index.html#ggplot2-usage",
    "href": "slides/04-graphics/index.html#ggplot2-usage",
    "title": "Graphics",
    "section": "ggplot2 usage",
    "text": "ggplot2 usage\n\nggplot2 is part of the tidyverse.\nIt has been around for over 10 years and is used by hundreds of thousands of people.\nIt can take some getting used to, but is worth the investment to learn properly"
  },
  {
    "objectID": "slides/04-graphics/index.html#ggplot2-key-components",
    "href": "slides/04-graphics/index.html#ggplot2-key-components",
    "title": "Graphics",
    "section": "ggplot2 key components",
    "text": "ggplot2 key components\nEvery ggplot2 plot has three key components:\n\nData (typically in a data frame),\nA set of aesthetic mappings between variables in the data and visual properties, and\nAt least one layer which describes how to render each observation. Layers are usually created with a geom_ function."
  },
  {
    "objectID": "slides/04-graphics/index.html#cake",
    "href": "slides/04-graphics/index.html#cake",
    "title": "Graphics",
    "section": "Cake!",
    "text": "Cake!\n\nImage credit: Tanya Shapiro"
  },
  {
    "objectID": "slides/04-graphics/index.html#initiate-with-data",
    "href": "slides/04-graphics/index.html#initiate-with-data",
    "title": "Graphics",
    "section": "Initiate with data",
    "text": "Initiate with data\nPackage is ggplot2 but function is ggplot()\n\nggplot(penguins)"
  },
  {
    "objectID": "slides/04-graphics/index.html#add-aesthetics",
    "href": "slides/04-graphics/index.html#add-aesthetics",
    "title": "Graphics",
    "section": "Add aesthetics",
    "text": "Add aesthetics\n\nggplot(penguins, aes(x = bill_length_mm, y = bill_depth_mm))"
  },
  {
    "objectID": "slides/04-graphics/index.html#add-points",
    "href": "slides/04-graphics/index.html#add-points",
    "title": "Graphics",
    "section": "Add points",
    "text": "Add points\nLayers are added with + (not %&gt;% or |&gt;)\n\nggplot(penguins, aes(x = bill_length_mm, y = bill_depth_mm)) +\n  geom_point()"
  },
  {
    "objectID": "slides/04-graphics/index.html#careful-what-goes-in-aes",
    "href": "slides/04-graphics/index.html#careful-what-goes-in-aes",
    "title": "Graphics",
    "section": "Careful what goes in aes()",
    "text": "Careful what goes in aes()\n\n\n\nggplot(penguins, \n       aes(x = bill_length_mm, \n           y = bill_depth_mm)) +\n  geom_point(aes(color = \"blue\"))\n\n\n\n\n\n\n\n\n\n\nggplot(penguins, \n       aes(x = bill_length_mm, \n           y = bill_depth_mm)) +\n  geom_point(color = \"blue\")"
  },
  {
    "objectID": "slides/04-graphics/index.html#when-you-do-want-to-map-a-colour-to-data",
    "href": "slides/04-graphics/index.html#when-you-do-want-to-map-a-colour-to-data",
    "title": "Graphics",
    "section": "When you do want to map a colour to data",
    "text": "When you do want to map a colour to data\n\nplotcode\n\n\n\n\n\n\nggplot(data = penguins,\n       aes(x = bill_length_mm,\n           y = bill_depth_mm,\n           group = species)) +\n  geom_point(aes(color = species, \n                 shape = species),\n             size = 3,\n             alpha = 0.8)\n\nNote that color and shape are inside aes() but size and alpha are outside."
  },
  {
    "objectID": "slides/04-graphics/index.html#add-additional-geoms",
    "href": "slides/04-graphics/index.html#add-additional-geoms",
    "title": "Graphics",
    "section": "Add additional geoms",
    "text": "Add additional geoms\n\nplotcode\n\n\n\n\n\n\nggplot(data = penguins,\n       aes(x = bill_length_mm,\n           y = bill_depth_mm,\n           group = species)) +\n  geom_point(aes(color = species, \n                 shape = species),\n             size = 3,\n             alpha = 0.8) +\n  geom_smooth(method = \"lm\", aes(color = species))"
  },
  {
    "objectID": "slides/04-graphics/index.html#scales-in-ggplot2",
    "href": "slides/04-graphics/index.html#scales-in-ggplot2",
    "title": "Graphics",
    "section": "Scales in ggplot2",
    "text": "Scales in ggplot2\n\nScales in ggplot2 control the mapping from data to aesthetics. They take your data and turn it into something that you can see, like size, colour, position or shape. They also provide the tools that let you interpret the plot: the axes and legends.\n\nThree groups of scales:\n\nposition scales and axes\ncolour scales and legends\nscales for other aesthetics"
  },
  {
    "objectID": "slides/04-graphics/index.html#add-a-colour-scale",
    "href": "slides/04-graphics/index.html#add-a-colour-scale",
    "title": "Graphics",
    "section": "Add a colour scale",
    "text": "Add a colour scale\n\nplotcode\n\n\n\n\n\n\nggplot(data = penguins,\n       aes(x = bill_length_mm,\n           y = bill_depth_mm,\n           group = species)) +\n  geom_point(aes(color = species, \n                 shape = species),\n             size = 3,\n             alpha = 0.8) +\n  geom_smooth(method = \"lm\", aes(color = species)) +\n  scale_color_manual(values = c(\"darkorange\",\"purple\",\"cyan4\"))"
  },
  {
    "objectID": "slides/04-graphics/index.html#facets",
    "href": "slides/04-graphics/index.html#facets",
    "title": "Graphics",
    "section": "Facets",
    "text": "Facets\n\nplot 1code 1plot 2code 2\n\n\n\n\n\n\nggplot(data = penguins,\n       aes(x = bill_length_mm,\n           y = bill_depth_mm,\n           group = species)) +\n  geom_point(aes(color = species, \n                 shape = species),\n             size = 3,\n             alpha = 0.8) +\n  geom_smooth(method = \"lm\", aes(color = species)) +\n  scale_color_manual(values = c(\"darkorange\",\"purple\",\"cyan4\")) +\n  facet_wrap(~species)\n\n\n\n\n\n\n\nggplot(data = penguins,\n       aes(x = bill_length_mm,\n           y = bill_depth_mm,\n           group = species)) +\n  geom_point(aes(color = species, \n                 shape = species),\n             size = 3,\n             alpha = 0.8) +\n  geom_smooth(method = \"lm\", aes(color = species)) +\n  scale_color_manual(values = c(\"darkorange\",\"purple\",\"cyan4\")) +\n  facet_wrap(~species, scales = \"free_x\")"
  },
  {
    "objectID": "slides/04-graphics/index.html#add-theme-elements",
    "href": "slides/04-graphics/index.html#add-theme-elements",
    "title": "Graphics",
    "section": "Add theme elements",
    "text": "Add theme elements\n\nplotcode\n\n\n\n\n\n\nggplot(data = penguins,\n       aes(x = bill_length_mm,\n           y = bill_depth_mm,\n           group = species)) +\n  geom_point(aes(color = species, \n                 shape = species),\n             size = 3,\n             alpha = 0.8) +\n  geom_smooth(method = \"lm\", aes(color = species)) +\n  scale_color_manual(values = c(\"darkorange\",\"purple\",\"cyan4\")) +\n  labs(title = \"Penguin bill dimensions\",\n       x = \"bill length (mm)\",\n       y = \"bill depth (mm)\") +\n  theme_minimal() + \n  theme(plot.title.position = \"plot\",\n        text = element_text(size = 20))"
  },
  {
    "objectID": "slides/04-graphics/index.html#your-turn-1",
    "href": "slides/04-graphics/index.html#your-turn-1",
    "title": "Graphics",
    "section": "Your turn!",
    "text": "Your turn!\nRecreate the base R plots from the first part of this session in ggplot2.\nYou may find the list of available geoms (and their help pages) useful:\nhttps://ggplot2.tidyverse.org/reference/index.html#layers"
  },
  {
    "objectID": "slides/04-graphics/index.html#boxplot-1",
    "href": "slides/04-graphics/index.html#boxplot-1",
    "title": "Graphics",
    "section": "Boxplot 1",
    "text": "Boxplot 1\n\nggplot(penguins) +\n  geom_boxplot(aes(y = body_mass_g))\n\n\nNotes\n\naes() can be defined for the whole plot or in the geom\nfirst arguments to aes() are x and y (don’t need to name them if using them in that order)"
  },
  {
    "objectID": "slides/04-graphics/index.html#boxplot-2",
    "href": "slides/04-graphics/index.html#boxplot-2",
    "title": "Graphics",
    "section": "Boxplot 2",
    "text": "Boxplot 2\n\nggplot(penguins) +\n  geom_boxplot(aes(species, body_mass_g))"
  },
  {
    "objectID": "slides/04-graphics/index.html#histogram-1",
    "href": "slides/04-graphics/index.html#histogram-1",
    "title": "Graphics",
    "section": "Histogram",
    "text": "Histogram\n\nggplot(penguins) +\n  geom_histogram(aes(body_mass_g), \n                 binwidth = 500)"
  },
  {
    "objectID": "slides/04-graphics/index.html#density-1",
    "href": "slides/04-graphics/index.html#density-1",
    "title": "Graphics",
    "section": "Density",
    "text": "Density\n\nggplot(penguins) +\n  geom_density(aes(body_mass_g))"
  },
  {
    "objectID": "slides/04-graphics/index.html#scatterplot-with-vectors",
    "href": "slides/04-graphics/index.html#scatterplot-with-vectors",
    "title": "Graphics",
    "section": "Scatterplot with vectors",
    "text": "Scatterplot with vectors\n\nggplot(data = NULL, aes(x = 1:10, y = 1:10)) +\n  geom_point()"
  },
  {
    "objectID": "slides/04-graphics/index.html#extensions",
    "href": "slides/04-graphics/index.html#extensions",
    "title": "Graphics",
    "section": "Extensions",
    "text": "Extensions\nSee extensions at https://exts.ggplot2.tidyverse.org/gallery/"
  },
  {
    "objectID": "slides/04-graphics/index.html#inspiration",
    "href": "slides/04-graphics/index.html#inspiration",
    "title": "Graphics",
    "section": "Inspiration",
    "text": "Inspiration\nR can be used to make incredible data visualisations.\nCheck out the galleries of these data viz practitioners working with ggplot2:\n\nCedric Scherer\nGeorgios Karamanis\nNicole Rennie\n\nAlso, #TidyTuesday on Mastodon is a great source for further inspiration"
  },
  {
    "objectID": "slides/04-graphics/index.html#ggplot2-resources",
    "href": "slides/04-graphics/index.html#ggplot2-resources",
    "title": "Graphics",
    "section": "ggplot2 resources",
    "text": "ggplot2 resources\n\nR for Data Science book: Chapters 3: Data Visualisation and 28: Graphics for Communication, to get up and running quickly\nggplot2 book, for an in-depth understanding\nPlotting anything with ggplot2 webinar with Thomas Lin Pederson (one of the main ggplot2 authors)\nR graphics cookbook, a practical guide that provides more than 150 recipes to help you generate high-quality graphs quickly\nCedric Scherer’s tutorial\nCedric Scherer’s ‘Engaging and Beautiful Data Visualizations with ggplot2’ workshop\nggplot2 reference"
  },
  {
    "objectID": "slides/04-graphics/index.html#data-visualisation-resources",
    "href": "slides/04-graphics/index.html#data-visualisation-resources",
    "title": "Graphics",
    "section": "Data visualisation resources",
    "text": "Data visualisation resources\nBooks about greating good data viz:\n\nData Visualisation: A practical Introduction by Kieran Healey\nFundamental’s of Data Visualisation by Claus Wilke"
  },
  {
    "objectID": "slides/04-graphics/index.html#viewing-and-saving-plots-in-rstudio",
    "href": "slides/04-graphics/index.html#viewing-and-saving-plots-in-rstudio",
    "title": "Graphics",
    "section": "Viewing and saving plots in RStudio",
    "text": "Viewing and saving plots in RStudio\nIn RStudio, graphs are displayed in the Plots window. The plot is sized to fit the window and will be rescaled if the size of the window is changed.\nBack and forward arrows allow you to navigate through graphs that have been plotted.\nPlots can be saved in various formats using the Export drop down menu, which also has an option to copy to the clipboard.\nDEMO"
  },
  {
    "objectID": "slides/04-graphics/index.html#getting-started-with-tables",
    "href": "slides/04-graphics/index.html#getting-started-with-tables",
    "title": "Graphics",
    "section": "Getting started with tables",
    "text": "Getting started with tables\nWe’re just going to scratch the surface of this today.\nWe’ll be using the gt and gtsummary packages, but there are many of other.\nHere’s a good overview of many different packages."
  },
  {
    "objectID": "slides/04-graphics/index.html#gt",
    "href": "slides/04-graphics/index.html#gt",
    "title": "Graphics",
    "section": "gt",
    "text": "gt\ngt is an R package to create tables. It provides a grammar of tables.\n\nThe gt philosophy: we can construct a wide variety of useful tables with a cohesive set of table parts. It all begins with table data (be it a tibble or a data frame). You then decide how to compose your gt table with the elements and formatting you need for the task at hand. Finally, the table is rendered by printing it at the console, including it in an R Markdown document, or exporting to a file using gtsave()"
  },
  {
    "objectID": "slides/04-graphics/index.html#parts-of-a-gt-table",
    "href": "slides/04-graphics/index.html#parts-of-a-gt-table",
    "title": "Graphics",
    "section": "Parts of a gt table",
    "text": "Parts of a gt table\n\nFrom https://gt.rstudio.com"
  },
  {
    "objectID": "slides/04-graphics/index.html#an-example",
    "href": "slides/04-graphics/index.html#an-example",
    "title": "Graphics",
    "section": "An example",
    "text": "An example\n\nFrom Albert Rapp’s gt book"
  },
  {
    "objectID": "slides/04-graphics/index.html#resources",
    "href": "slides/04-graphics/index.html#resources",
    "title": "Graphics",
    "section": "Resources",
    "text": "Resources\nSee the article Case Study: gtcars for a thorough example of gt’s capabilities.\nSee also Albert Rapp’s book on gt."
  },
  {
    "objectID": "slides/04-graphics/index.html#guidelines-for-better-tables",
    "href": "slides/04-graphics/index.html#guidelines-for-better-tables",
    "title": "Graphics",
    "section": "Guidelines for better tables",
    "text": "Guidelines for better tables\nHaving the technical know-how to code tables is one thing, making them look good and such that the reader can easily read the data is another!\nHighly recommend this Tom Mock guide, based on Jon Schwabish’s original. It covers guidelines for making better tables, and shows how to implement them in gt. It demonstrates even more of what gt can do than the article on the previous slide."
  },
  {
    "objectID": "slides/04-graphics/index.html#gtsummary",
    "href": "slides/04-graphics/index.html#gtsummary",
    "title": "Graphics",
    "section": "gtsummary",
    "text": "gtsummary\ngtsummary extends the gt package and is used for summarising tables and working with statistical model summaries."
  },
  {
    "objectID": "slides/04-graphics/index.html#gtsummary-example-1-data",
    "href": "slides/04-graphics/index.html#gtsummary-example-1-data",
    "title": "Graphics",
    "section": "gtsummary example 1: data",
    "text": "gtsummary example 1: data\n\nlibrary(gtsummary)\n# make dataset with a few variables to summarize\ntrial2 &lt;- trial |&gt; select(age, grade, response, trt)\n\nhead(trial2)\n\n# A tibble: 6 × 4\n    age grade response trt   \n  &lt;dbl&gt; &lt;fct&gt;    &lt;int&gt; &lt;chr&gt; \n1    23 II           0 Drug A\n2     9 I            1 Drug B\n3    31 II           0 Drug A\n4    NA III          1 Drug A\n5    51 III          1 Drug A\n6    39 I            0 Drug B"
  },
  {
    "objectID": "slides/04-graphics/index.html#gtsummary-example-1-code",
    "href": "slides/04-graphics/index.html#gtsummary-example-1-code",
    "title": "Graphics",
    "section": "gtsummary example 1: code",
    "text": "gtsummary example 1: code\n\n# summarize and augment the data\nsummary_table &lt;- \n  tbl_summary(\n    trial2,\n    by = trt, # split table by group\n    missing = \"no\" # don't list missing data separately\n  )  |&gt; \n  add_n() |&gt; # add column with total number of non-missing observations\n  add_p() |&gt; # test for a difference between groups\n  modify_header(label = \"**Variable**\") |&gt; # update the column header\n  bold_labels()"
  },
  {
    "objectID": "slides/04-graphics/index.html#gtsummary-example-1-output",
    "href": "slides/04-graphics/index.html#gtsummary-example-1-output",
    "title": "Graphics",
    "section": "gtsummary example 1: output",
    "text": "gtsummary example 1: output\n\n\n\n\n\n\n\n\n\nVariable\nN\nDrug A, N = 981\nDrug B, N = 1021\np-value2\n\n\n\n\nAge\n189\n46 (37, 59)\n48 (39, 56)\n0.7\n\n\nGrade\n200\n\n\n0.9\n\n\n    I\n\n35 (36%)\n33 (32%)\n\n\n\n    II\n\n32 (33%)\n36 (35%)\n\n\n\n    III\n\n31 (32%)\n33 (32%)\n\n\n\nTumor Response\n193\n28 (29%)\n33 (34%)\n0.5\n\n\n\n1 Median (IQR); n (%)\n\n\n2 Wilcoxon rank sum test; Pearson’s Chi-squared test"
  },
  {
    "objectID": "slides/04-graphics/index.html#gtsummary-example-2-code",
    "href": "slides/04-graphics/index.html#gtsummary-example-2-code",
    "title": "Graphics",
    "section": "gtsummary example 2: code",
    "text": "gtsummary example 2: code\n\nmod1 &lt;- glm(response ~ trt + age + grade, trial, family = binomial)\n\nregression_tab &lt;- tbl_regression(mod1, exponentiate = TRUE)"
  },
  {
    "objectID": "slides/04-graphics/index.html#gtsummary-example-2-output",
    "href": "slides/04-graphics/index.html#gtsummary-example-2-output",
    "title": "Graphics",
    "section": "gtsummary example 2: output",
    "text": "gtsummary example 2: output\n\n\n\n\n\n\n\n\n\nCharacteristic\nOR1\n95% CI1\np-value\n\n\n\n\nChemotherapy Treatment\n\n\n\n\n\n    Drug A\n—\n—\n\n\n\n    Drug B\n1.13\n0.60, 2.13\n0.7\n\n\nAge\n1.02\n1.00, 1.04\n0.10\n\n\nGrade\n\n\n\n\n\n    I\n—\n—\n\n\n\n    II\n0.85\n0.39, 1.85\n0.7\n\n\n    III\n1.01\n0.47, 2.15\n&gt;0.9\n\n\n\n1 OR = Odds Ratio, CI = Confidence Interval"
  },
  {
    "objectID": "slides/04-graphics/index.html#table-inspiration",
    "href": "slides/04-graphics/index.html#table-inspiration",
    "title": "Graphics",
    "section": "Table inspiration",
    "text": "Table inspiration\nThe winners of the RStudio Table Contest\n\n2022\n2021\n2020, also has links to tutorials"
  },
  {
    "objectID": "slides/04-graphics/index.html#license",
    "href": "slides/04-graphics/index.html#license",
    "title": "Graphics",
    "section": "License",
    "text": "License\nLicensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License (CC BY-NC-SA 4.0)."
  },
  {
    "objectID": "join.html",
    "href": "join.html",
    "title": "Join the class",
    "section": "",
    "text": "This workshop is now full.\nPlease fill in the following form to register interest in future courses: https://warwick.ac.uk/research/rtp/sc/rse/training/register-interest/"
  },
  {
    "objectID": "content/03-data-wrangling/index.html",
    "href": "content/03-data-wrangling/index.html",
    "title": "Data Types, Structures and Wrangling",
    "section": "",
    "text": "Here’s a link to the slides in a new window.\nHere are the slides embedded:"
  },
  {
    "objectID": "content/03-data-wrangling/index.html#slides",
    "href": "content/03-data-wrangling/index.html#slides",
    "title": "Data Types, Structures and Wrangling",
    "section": "",
    "text": "Here’s a link to the slides in a new window.\nHere are the slides embedded:"
  },
  {
    "objectID": "content/03-data-wrangling/index.html#resources",
    "href": "content/03-data-wrangling/index.html#resources",
    "title": "Data Types, Structures and Wrangling",
    "section": "Resources",
    "text": "Resources\n\nR and RStudio\n\nRStudio cheatsheets\ndplyr cheatsheet\nR for data science book\n\n\n\nPackages\n\ndplyr\nhttps://dplyr.tidyverse.org\nforcats\nhttps://forcats.tidyverse.org\nferriswheels\nhttps://github.com/EmilHvitfeldt/ferriswheels\nhere\nhttps://here.r-lib.org"
  },
  {
    "objectID": "content/05-quarto/index.html",
    "href": "content/05-quarto/index.html",
    "title": "Quarto",
    "section": "",
    "text": "Here’s a link to the slides in a new window.\nHere are the slides embedded:"
  },
  {
    "objectID": "content/05-quarto/index.html#slides",
    "href": "content/05-quarto/index.html#slides",
    "title": "Quarto",
    "section": "",
    "text": "Here’s a link to the slides in a new window.\nHere are the slides embedded:"
  },
  {
    "objectID": "content/05-quarto/index.html#resources",
    "href": "content/05-quarto/index.html#resources",
    "title": "Quarto",
    "section": "Resources",
    "text": "Resources\n\nReading\n\nhttps://quarto.org: The official documentation\nAwesome Quarto: A curated list of Quarto talks, tools, examples & articles\nBeautiful Reports and Persentations with Quarto\nGetting Started with Quarto workshop website\nQuarto for R and RStudio workshop"
  },
  {
    "objectID": "content.html",
    "href": "content.html",
    "title": "Content",
    "section": "",
    "text": "Title\n\n\n\n\n\n\nWelcome and Introduction\n\n\n\n\nIntroduction to R and RStudio\n\n\n\n\nData Types, Structures and Wrangling\n\n\n\n\nGraphics\n\n\n\n\nQuarto\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "prerequisites.html",
    "href": "prerequisites.html",
    "title": "Getting set up",
    "section": "",
    "text": "Please ensure that you have the latest versions of R and RStudio installed prior to the first session. Currently, that’s R-4.3.3 and RStudio-2023.12.1.\nWe also strongly recommend you install the development tools to avoid potential issues installing packages.\n\nInstalling R\nDownload the pre-compiled binary for your OS from https://cloud.r-project.org/ and install. More specifically:\nFor Windows\nClick “Download R for Windows”, then “base”, then “Download R-4.3.3 for Windows”. This will download an .exe file; once downloaded, open to start the installation.\nFor Mac\nClick “Download R for macOS”, then “R-4.3.3-arm64.pkg” (the first option) to download the installer for Macs with Apple Silicon chips or “R-4.3.3-x86_64.pkg” (the second option) to download the installer for Macs with Intel chips. Run the installer to complete installation.\nFor Linux\nClick “Download R for Linux”. Instructions on installing are given for Debian, Fedora, Redhat, Suse and Ubuntu distributions. Where there is a choice, install both r-base and r-base-dev.\n\n\nInstalling R Studio Desktop (Open Source Edition)\nDownloads are available from https://posit.co/download/rstudio-desktop/\nDownload the relevant installer either under the “Install RStudio” header or, scrolling down the page, from the ‘All installers and Tarballs’ section. Run the installer to complete installation.\nFor Windows with no admin rights\nDownload the .zip source archive under “Zip/Tarballs”. Extract the files to a folder where you have write access, e.g. C:\\Users\\username\\RStudio. In this folder, open the bin directory and find the RStudio program: it is named rstudio.exe, but the file extension will typically be hidden, so look for rstudio. Right-click this executable to create a desktop shortcut. Double-click the executable or use the shortcut to open.\nFor all other operating systems\nDownload the relevant installer for your OS listed under “Installers for Supported Platforms”. Run the installer to complete installation.\n\n\nDevelopment Tools\nSome additional tools may be required to compile R packages from source.\nFor Windows with no admin rights\nDownload the latest (recommended) Rtools installer, Rtools.exe, from https://cran.r-project.org/bin/windows/Rtools/. Run the installer keeping the default settings.\nFor Windows with admin rights\nDownload the latest Rtools installer, Rtools.exe, from https://cran.r-project.org/bin/windows/Rtools/. Run the installer making the following selections: keep the default settings for the installation location and components to install; check the box to add rtools to the system PATH.\nFor Mac\nInstall XCode. Either:\n\nDownload and install XCode from the Mac AppStore: http://itunes.apple.com/us/app/xcode/id497799835?mt=12\nWithin XCode go to Preferences : Downloads and install the Command Line Tools\n\nOr for a smaller download size:\n\nRegister as an Apple Developer (free) here: https://developer.apple.com/programs/register/\nDownload the Command Line Tools for XCode appropriate for the version of OS X you are running from here: https://developer.apple.com/downloads/\n\nFor Linux\nIf you installed r-base-dev, when installing R, you should have all you need to build packages from source. Otherwise return to the instructions for installing R for your distribution and follow the instructions there to install the additional tools."
  },
  {
    "objectID": "content/04-graphics/index.html",
    "href": "content/04-graphics/index.html",
    "title": "Graphics",
    "section": "",
    "text": "Here’s a link to the slides in a new window.\nHere are the slides embedded:"
  },
  {
    "objectID": "content/04-graphics/index.html#slides",
    "href": "content/04-graphics/index.html#slides",
    "title": "Graphics",
    "section": "",
    "text": "Here’s a link to the slides in a new window.\nHere are the slides embedded:"
  },
  {
    "objectID": "content/04-graphics/index.html#resources",
    "href": "content/04-graphics/index.html#resources",
    "title": "Graphics",
    "section": "Resources",
    "text": "Resources\n\nReading\n\nggplot2: Elegant Graphics for Data Analysis (for an in-depth understanding)\nR for Data Science book: Chapters 3: Data Visualisation and 28: Graphics for Communication, to get up and running quickly\nPlotting anything with ggplot2 webinar with Thomas Lin Pederson (one of the main ggplot2 authors)\nR graphics cookbook, a practical guide that provides more than 150 recipes to help you generate high-quality graphs quickly\nCedric Scherer’s tutorial\nCedric Scherer’s ‘Engaging and Beautiful Data Visualizations with ggplot2’ workshop\nggplot2 reference\n\n\n\nPackages\n\nggplot2\nhttps://ggplot2.tidyverse.org\ngt\nhttps://gt.rstudio.com\ngtsummary\nhttps://www.danieldsjoberg.com/gtsummary/"
  },
  {
    "objectID": "content/01-welcome/index.html",
    "href": "content/01-welcome/index.html",
    "title": "Welcome and Introduction",
    "section": "",
    "text": "Here’s a link to the slides in a new window.\nHere are the slides embedded:"
  },
  {
    "objectID": "content/01-welcome/index.html#slides",
    "href": "content/01-welcome/index.html#slides",
    "title": "Welcome and Introduction",
    "section": "",
    "text": "Here’s a link to the slides in a new window.\nHere are the slides embedded:"
  },
  {
    "objectID": "content/02-intro/index.html",
    "href": "content/02-intro/index.html",
    "title": "Introduction to R and RStudio",
    "section": "",
    "text": "Here’s a link to the slides in a new window.\nHere are the slides embedded:"
  },
  {
    "objectID": "content/02-intro/index.html#slides",
    "href": "content/02-intro/index.html#slides",
    "title": "Introduction to R and RStudio",
    "section": "",
    "text": "Here’s a link to the slides in a new window.\nHere are the slides embedded:"
  },
  {
    "objectID": "content/02-intro/index.html#resources",
    "href": "content/02-intro/index.html#resources",
    "title": "Introduction to R and RStudio",
    "section": "Resources",
    "text": "Resources\n\nR and RStudio\n\nRStudio IDE cheatsheet\nhttps://rstudio.github.io/cheatsheets/html/rstudio-ide.html\nBeginner resources from the RStudio Education team\nhttps://education.rstudio.com/learn/beginner/\nIntroduction to R and RStudio from the Carpentries\nhttps://carpentries-incubator.github.io/r-tidyverse-4-datasets/01-project-introduction.html\n\n\n\nPackages\n\ntidyverse\nhttps://www.tidyverse.org\npalmerpenguins\nhttps://allisonhorst.github.io/palmerpenguins/index.html"
  },
  {
    "objectID": "slides/00-template/index.html#overview",
    "href": "slides/00-template/index.html#overview",
    "title": "SESSION TITLE",
    "section": "Overview",
    "text": "Overview\n\nWhat we’re covering"
  },
  {
    "objectID": "slides/00-template/index.html#resources",
    "href": "slides/00-template/index.html#resources",
    "title": "SESSION TITLE",
    "section": "Resources",
    "text": "Resources\nMaterial inspired by and remixed from:"
  },
  {
    "objectID": "slides/00-template/index.html#license",
    "href": "slides/00-template/index.html#license",
    "title": "SESSION TITLE",
    "section": "License",
    "text": "License\nLicensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License (CC BY-NC-SA 4.0)."
  },
  {
    "objectID": "slides/05-quarto/index.html#disclaimer",
    "href": "slides/05-quarto/index.html#disclaimer",
    "title": "Quarto",
    "section": "Disclaimer",
    "text": "Disclaimer\nThese slides are almost entirely copied from Tom Mock’s ‘Getting Started with Quarto’ workshop at rstudio::conf(2022).\n\nWorkshop website\nWorkshop repo\n\nShared under Creative Commons 4.0 License."
  },
  {
    "objectID": "slides/05-quarto/index.html#hello-quarto",
    "href": "slides/05-quarto/index.html#hello-quarto",
    "title": "Quarto",
    "section": "Hello Quarto",
    "text": "Hello Quarto\n\nQuarto® is an open-source scientific and technical publishing system built on Pandoc\n\n\n\nYou can weave together narrative text and code to produce elegantly formatted output as documents, web pages, blog posts, books and more."
  },
  {
    "objectID": "slides/05-quarto/index.html#what-about-rmarkdown",
    "href": "slides/05-quarto/index.html#what-about-rmarkdown",
    "title": "Quarto",
    "section": "What about RMarkdown?",
    "text": "What about RMarkdown?"
  },
  {
    "objectID": "slides/05-quarto/index.html#so-what-is-quarto",
    "href": "slides/05-quarto/index.html#so-what-is-quarto",
    "title": "Quarto",
    "section": "So what is Quarto?",
    "text": "So what is Quarto?\n\nQuarto is the next generation of R Markdown. For everyone.\n\n\nQuarto is a command line interface (CLI) that renders plain text formats (.qmd, .rmd, .md) OR mixed formats (.ipynb/Jupyter notebook) into static PDF/Word/HTML reports, books, websites, presentations and more"
  },
  {
    "objectID": "slides/05-quarto/index.html#quarto-more-than-just-knitr",
    "href": "slides/05-quarto/index.html#quarto-more-than-just-knitr",
    "title": "Quarto",
    "section": "Quarto, more than just knitr",
    "text": "Quarto, more than just knitr\nWe learned from 10 years of literate programming with knitr + rmarkdown"
  },
  {
    "objectID": "slides/05-quarto/index.html#for-everyone",
    "href": "slides/05-quarto/index.html#for-everyone",
    "title": "Quarto",
    "section": "For everyone",
    "text": "For everyone\n\nWorks with R, Python, Julia, Observable JS\nknitr and jupyter engines\nWorks in RStudio, Jupyter Notebooks, VS Code\n\n\nFor the R Foundations course, we’ll focus on R and RStudio"
  },
  {
    "objectID": "slides/05-quarto/index.html#so-what-is-quarto-1",
    "href": "slides/05-quarto/index.html#so-what-is-quarto-1",
    "title": "Quarto",
    "section": "So what is Quarto?",
    "text": "So what is Quarto?\n\nA Quarto document i.e. a .qmd is a plain text file, like a .rmd, that can be rendered to many different formats"
  },
  {
    "objectID": "slides/05-quarto/index.html#one-install-batteries-included",
    "href": "slides/05-quarto/index.html#one-install-batteries-included",
    "title": "Quarto",
    "section": "One install, “Batteries included”",
    "text": "One install, “Batteries included”\n\nRMarkdown grew into a large ecosystem, with varying syntax.\n\n\nQuarto comes “batteries included” straight out of the box\n\nHTML reports and websites\nPDF reports\nMS Office (Word, Powerpoint)\nPresentations (Powerpoint, Beamer, revealjs)\nBooks\n\n\n\n\nAny language, exact same approach and syntax"
  },
  {
    "objectID": "slides/05-quarto/index.html#quarto-for-rmarkdown-users",
    "href": "slides/05-quarto/index.html#quarto-for-rmarkdown-users",
    "title": "Quarto",
    "section": "Quarto for RMarkdown users",
    "text": "Quarto for RMarkdown users\nSee FAQs, including a conversion from RMarkdown formats to Quarto equivalents."
  },
  {
    "objectID": "slides/05-quarto/index.html#anatomy-of-a-quarto-document",
    "href": "slides/05-quarto/index.html#anatomy-of-a-quarto-document",
    "title": "Quarto",
    "section": "Anatomy of a Quarto document",
    "text": "Anatomy of a Quarto document\n\nMetadata (YAML)\n\n---\nformat: html\n---"
  },
  {
    "objectID": "slides/05-quarto/index.html#anatomy-of-a-quarto-document-1",
    "href": "slides/05-quarto/index.html#anatomy-of-a-quarto-document-1",
    "title": "Quarto",
    "section": "Anatomy of a Quarto document",
    "text": "Anatomy of a Quarto document\n\nCode\n\n\n```{r}\n#| eval: true\nlibrary(dplyr)\nmtcars %&gt;% \n  group_by(cyl) %&gt;%\n  summarize(mean = mean(mpg), .groups = \"drop\")\n```\n\n# A tibble: 3 × 2\n    cyl  mean\n  &lt;dbl&gt; &lt;dbl&gt;\n1     4  26.7\n2     6  19.7\n3     8  15.1"
  },
  {
    "objectID": "slides/05-quarto/index.html#anatomy-of-a-quarto-document-2",
    "href": "slides/05-quarto/index.html#anatomy-of-a-quarto-document-2",
    "title": "Quarto",
    "section": "Anatomy of a Quarto document",
    "text": "Anatomy of a Quarto document\n\nText\n\n# Heading 1\nThis is a sentence with some **bold text** and some *italic text* \nThis is an [image](image.png)."
  },
  {
    "objectID": "slides/05-quarto/index.html#metadata-yaml",
    "href": "slides/05-quarto/index.html#metadata-yaml",
    "title": "Quarto",
    "section": "Metadata: YAML",
    "text": "Metadata: YAML\nThe YAML metadata or header is:\n\nprocessed in many stages of the rendering process and can influence the final document in many different ways. It is placed at the very beginning of the document and is read by each of Pandoc, Quarto and knitr. Along the way, the information that it contains can affect the code, content, and the rendering process."
  },
  {
    "objectID": "slides/05-quarto/index.html#yaml",
    "href": "slides/05-quarto/index.html#yaml",
    "title": "Quarto",
    "section": "YAML",
    "text": "YAML\n---\ntitle: \"My Document\"\nformat: \n  html:\n    toc: true\n    code-fold: true\n---"
  },
  {
    "objectID": "slides/05-quarto/index.html#markdown",
    "href": "slides/05-quarto/index.html#markdown",
    "title": "Quarto",
    "section": "Markdown",
    "text": "Markdown\n\nQuarto is based on Pandoc and uses its variation of markdown as its underlying document syntax. Pandoc markdown is an extended and slightly revised version of John Gruber’s Markdown syntax.\n\n\n\nMarkdown is a plain text format that is designed to be easy to write, and, even more importantly, easy to read"
  },
  {
    "objectID": "slides/05-quarto/index.html#text-formatting",
    "href": "slides/05-quarto/index.html#text-formatting",
    "title": "Quarto",
    "section": "Text Formatting",
    "text": "Text Formatting\n\n\n\n\n\n\n\nMarkdown Syntax\nOutput\n\n\n\n\n*italics* and **bold**\nitalics and bold\n\n\nsuperscript^2^ / subscript~2~\nsuperscript2 / subscript2\n\n\n~~strikethrough~~\nstrikethrough\n\n\n`verbatim code`\nverbatim code"
  },
  {
    "objectID": "slides/05-quarto/index.html#headings",
    "href": "slides/05-quarto/index.html#headings",
    "title": "Quarto",
    "section": "Headings",
    "text": "Headings\n\n\n\n\n\n\n\nMarkdown Syntax\nOutput\n\n\n\n\n# Header 1\nHeader 1\n\n\n## Header 2\nHeader 2\n\n\n### Header 3\nHeader 3\n\n\n#### Header 4\nHeader 4\n\n\n##### Header 5\nHeader 5\n\n\n###### Header 6\nHeader 6"
  },
  {
    "objectID": "slides/05-quarto/index.html#links",
    "href": "slides/05-quarto/index.html#links",
    "title": "Quarto",
    "section": "Links",
    "text": "Links\n\nThere are several types of “links” or hyperlinks.\n\n\nMarkdownOutput\n\n\nYou can embed [named hyperlinks](https://quarto.org/),\ndirect urls like &lt;https://quarto.org/&gt;, and links to \n[other places](#quarto-anatomy) in \nthe document. The syntax is similar for embedding an\ninline image: ![Penguins](images/lter_penguins.png).\n\n\nYou can embed named hyperlinks, direct urls like https://quarto.org/, and links to other places in the document. The syntax is similar for embedding an inline image:"
  },
  {
    "objectID": "slides/05-quarto/index.html#code",
    "href": "slides/05-quarto/index.html#code",
    "title": "Quarto",
    "section": "Code",
    "text": "Code\n\n\n```{r}\n#| output-location: column\n#| label: fig-airquality\n#| fig-cap: Temperature and ozone level.\n#| warning: false\n\nlibrary(ggplot2)\n\nggplot(airquality, aes(Temp, Ozone)) + \n  geom_point() + \n  geom_smooth(method = \"loess\")\n```\n\n\n\n\n\n\n\n\nFigure 1: Temperature and ozone level."
  },
  {
    "objectID": "slides/05-quarto/index.html#literate-programming",
    "href": "slides/05-quarto/index.html#literate-programming",
    "title": "Quarto",
    "section": "Literate programming",
    "text": "Literate programming\nLiterate programming is writing out the program logic in a human language with included (separated by a primitive markup) code snippets and macros. - Wikipedia\n---\ntitle: \"ggplot2 demo\"\ndate: \"5/22/2021\"\nformat: html\n---\n\n## Air Quality\n\nThere is a relationship between temperature and the ozone level.\n\n```{r}\n#| label: fig-airquality\nlibrary(ggplot2)\nggplot(airquality, aes(Temp, Ozone)) + \n  geom_point() + \n  geom_smooth(method = \"loess\")\n```"
  },
  {
    "objectID": "slides/05-quarto/index.html#metadata-yaml-1",
    "href": "slides/05-quarto/index.html#metadata-yaml-1",
    "title": "Quarto",
    "section": "Metadata: YAML",
    "text": "Metadata: YAML\n“Yet Another Markup Language” or “YAML Ain’t Markup Language”\n---\nkey: value\n---"
  },
  {
    "objectID": "slides/05-quarto/index.html#output-options",
    "href": "slides/05-quarto/index.html#output-options",
    "title": "Quarto",
    "section": "Output Options",
    "text": "Output Options\n---\nformat: something\n---\n\n---\nformat: html\n---\n---\nformat: pdf\n---\n---\nformat: revealjs\n---"
  },
  {
    "objectID": "slides/05-quarto/index.html#options-on-options",
    "href": "slides/05-quarto/index.html#options-on-options",
    "title": "Quarto",
    "section": "Options on options",
    "text": "Options on options\nThen add option arguments!\n---\nformat: \n  html:\n    toc: true\n    code-fold: true\n---\n\nSub-options should be below the main format output and spacing matters!\n---\nformat: \n  html:\n    option1: text\n    option2: logical\n---"
  },
  {
    "objectID": "slides/05-quarto/index.html#yaml-for-format-html",
    "href": "slides/05-quarto/index.html#yaml-for-format-html",
    "title": "Quarto",
    "section": "YAML for format: html",
    "text": "YAML for format: html"
  },
  {
    "objectID": "slides/05-quarto/index.html#yaml-is-sensitive",
    "href": "slides/05-quarto/index.html#yaml-is-sensitive",
    "title": "Quarto",
    "section": "YAML is sensitive",
    "text": "YAML is sensitive\n---\nformat:html # invalid, no space between\n---\n\n---\nformat: # invalid, read as missing\nhtml\n---\n\n---\nformat: \n  html: # valid but needs next object\n---"
  },
  {
    "objectID": "slides/05-quarto/index.html#anatomy-of-a-code-chunk",
    "href": "slides/05-quarto/index.html#anatomy-of-a-code-chunk",
    "title": "Quarto",
    "section": "Anatomy of a code chunk",
    "text": "Anatomy of a code chunk\n```{r}\n#| label: car-stuff\n#| echo: false\nmtcars %&gt;% \n  distinct(cyl)\n```\n\n\nHas 3x backticks on each end ```\n\nIndicate engine (r) between curly braces {r}\n\nPlace options underneath, behind the #| (hashpipe):\n\n#| option1: value"
  },
  {
    "objectID": "slides/05-quarto/index.html#quarto-presentations",
    "href": "slides/05-quarto/index.html#quarto-presentations",
    "title": "Quarto",
    "section": "Quarto presentations",
    "text": "Quarto presentations\n---\nformat: revealjs\n---\n---\nformat: \n  revealjs:\n    slide-number: true\n---"
  },
  {
    "objectID": "slides/05-quarto/index.html#this-quarto-presentation",
    "href": "slides/05-quarto/index.html#this-quarto-presentation",
    "title": "Quarto",
    "section": "This Quarto presentation",
    "text": "This Quarto presentation\n---\ntitle: Quarto\nsubtitle: R Foundations course\nauthor: Ella Kaye | Department of Statistics | University of Warwick\ntitle-slide-attributes:\n  data-background-color: \"#552D62\"\ndate: 2023-11-16\ndate-format: long\nformat: \n  revealjs:\n    theme: [default, ../../slides.scss]\n    slide-number: true\n    execute:\n      echo: true\n---"
  },
  {
    "objectID": "slides/05-quarto/index.html#more-on-quarto-presentations",
    "href": "slides/05-quarto/index.html#more-on-quarto-presentations",
    "title": "Quarto",
    "section": "More on Quarto presentations",
    "text": "More on Quarto presentations\n\nOfficial guide\nSlidecraft 101 by Emil Hvitfeldt\n\nColours and Fonts\nCode and Output\nTheme variants\nAdvanced slide themes\n7 tips and tricks"
  },
  {
    "objectID": "slides/05-quarto/index.html#web-publishing-venues",
    "href": "slides/05-quarto/index.html#web-publishing-venues",
    "title": "Quarto",
    "section": "Web publishing venues",
    "text": "Web publishing venues\n\n\n\nDestination\nDescription\n\n\n\n\nQuarto Pub\nPublishing service for Quarto documents, websites, and books.\n\n\nGitHub Pages\nPublish content based on source code managed within a GitHub repository.\n\n\nPosit Connect\nPublishing platform for secure sharing of data products within an organization.\n\n\nNetlify\nProfessional web publishing platform.\n\n\nConfluence\nPublishing platform for supporting team collaboration.\n\n\n\n… and more."
  },
  {
    "objectID": "slides/05-quarto/index.html#quarto-pub",
    "href": "slides/05-quarto/index.html#quarto-pub",
    "title": "Quarto",
    "section": "Quarto Pub",
    "text": "Quarto Pub\nVisit https://quartopub.com/ and set up a free account."
  },
  {
    "objectID": "slides/05-quarto/index.html#quarto-publish",
    "href": "slides/05-quarto/index.html#quarto-publish",
    "title": "Quarto",
    "section": "quarto publish",
    "text": "quarto publish\n\n\n\nAt the Terminal, run:\n\n\n\nquarto publish &lt;document&gt;"
  },
  {
    "objectID": "slides/05-quarto/index.html#resources",
    "href": "slides/05-quarto/index.html#resources",
    "title": "Quarto",
    "section": "Resources",
    "text": "Resources\n\nhttps://quarto.org: The official documentation\nAwesome Quarto: A curated list of Quarto talks, tools, examples & articles\nBeautiful Reports and Persentations with Quarto\nGetting Started with Quarto workshop website\nQuarto for R and RStudio workshop"
  },
  {
    "objectID": "slides/05-quarto/index.html#resources-1",
    "href": "slides/05-quarto/index.html#resources-1",
    "title": "Quarto",
    "section": "Resources",
    "text": "Resources\nThese slides are almost entirely copied from Tom Mock’s ‘Getting Started with Quarto’ workshop at rstudio::conf(2022).\n\nWorkshop website\nWorkshop repo\n\nShared under Creative Commons 4.0 License."
  },
  {
    "objectID": "slides/05-quarto/index.html#license",
    "href": "slides/05-quarto/index.html#license",
    "title": "Quarto",
    "section": "License",
    "text": "License\nLicensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License (CC BY-NC-SA 4.0)."
  },
  {
    "objectID": "slides/03-data-wrangling/index.html#overview",
    "href": "slides/03-data-wrangling/index.html#overview",
    "title": "Data Types, Structures and Wrangling",
    "section": "Overview",
    "text": "Overview\n\nData types\nData structures\nData import and wrangling"
  },
  {
    "objectID": "slides/03-data-wrangling/index.html#assigning-in-r",
    "href": "slides/03-data-wrangling/index.html#assigning-in-r",
    "title": "Data Types, Structures and Wrangling",
    "section": "Assigning in R",
    "text": "Assigning in R\nThe assignment operator in R is &lt;-\nWe can create objects in R and assign them names:\n\nx &lt;- 1 + 3\n\nThen we can inspect the objects we have created:\n\nx\n\n[1] 4\n\n\nAnd use them further:\n\nx + 5\n\n[1] 9"
  },
  {
    "objectID": "slides/03-data-wrangling/index.html#naming-objects",
    "href": "slides/03-data-wrangling/index.html#naming-objects",
    "title": "Data Types, Structures and Wrangling",
    "section": "Naming objects",
    "text": "Naming objects\n\nforbiddengoodbad\n\n\nObject names cannot:\n\nstart with a number\ncontain certain characters like , - ?\ncontain a space (unless in ``, but that is not best practice)\n\n\n\n\nmeaningful yet concise\n\n\nday_one\nday_1\n\nconsistent\n\n\ni_use_snake_case\nother.people.use.periods\nevenOthersUseCamelCase\nThe tidyverse has popularised the use of snake_case. Camel case is a better option for screen readers. The use of periods is discouraged because periods have other uses in R.\n\n\n\nnot meaningful\n\n\nfoo\nbar\n\nunnecessarily long or difficult to read\n\n\nfirst_day_of_month\ndayone\n\ninconsistent"
  },
  {
    "objectID": "slides/03-data-wrangling/index.html#rstudio-demo",
    "href": "slides/03-data-wrangling/index.html#rstudio-demo",
    "title": "Data Types, Structures and Wrangling",
    "section": "RStudio demo",
    "text": "RStudio demo\nAssigning and environment pane.\nThere is an RStudio shortcut for &lt;- which also puts spaces around it:\nAlt/⌥ + -"
  },
  {
    "objectID": "slides/03-data-wrangling/index.html#basic-data-types-in-r",
    "href": "slides/03-data-wrangling/index.html#basic-data-types-in-r",
    "title": "Data Types, Structures and Wrangling",
    "section": "Basic data types in R",
    "text": "Basic data types in R\n\ncharacter: \"a\", \"hello, world!\"\ndouble: 3, 3.14, pi\ninteger: 3L (the L tells R to store this as an interger)\nlogical: TRUE and FALSE\ncomplex: 3+2i. N.B. need to write 1i for \\(\\sqrt(-1)\\).\nraw: holds raw bytes (rarely used)\n\nN.B. double and integer types are both numeric"
  },
  {
    "objectID": "slides/03-data-wrangling/index.html#special-values",
    "href": "slides/03-data-wrangling/index.html#special-values",
    "title": "Data Types, Structures and Wrangling",
    "section": "Special values",
    "text": "Special values\n\nNA: The value NA is given to any data which R knows to be missing. It is not a character string, i.e. it is different to \"NA\"\nInf: Positive infinity, e.g. the result of dividing a non-zero number by zero\nNaN: Not a number, e.g. attempting to find the logarithm of a negative number\nNULL: The null object. Often returned by expressions and functions whose value is undefined"
  },
  {
    "objectID": "slides/03-data-wrangling/index.html#data-structures",
    "href": "slides/03-data-wrangling/index.html#data-structures",
    "title": "Data Types, Structures and Wrangling",
    "section": "Data structures",
    "text": "Data structures\nData structures are the building blocks of R code.\nIn R, the main types of structures are\n\nvectors\nfactors\nmatrices and arrays\nlists\ndata frames\n\nFocus today on vectors, factors and data frames."
  },
  {
    "objectID": "slides/03-data-wrangling/index.html#vectors",
    "href": "slides/03-data-wrangling/index.html#vectors",
    "title": "Data Types, Structures and Wrangling",
    "section": "Vectors",
    "text": "Vectors\nA single number is a special case of a numeric vector. Vectors of length greater than one can be created using the concatenate function, c.\n\nx &lt;- c(1, 3, 6)\nfruits &lt;- c(\"apple\", \"pear\")\n\nThe elements of the vector must be of the same type: common types are numeric, character and logical.\nThere are built-in functions for getting information about vectors, e.g.\n\nlength(fruits)\n\n[1] 2"
  },
  {
    "objectID": "slides/03-data-wrangling/index.html#creating-vectors",
    "href": "slides/03-data-wrangling/index.html#creating-vectors",
    "title": "Data Types, Structures and Wrangling",
    "section": "Creating vectors",
    "text": "Creating vectors\nThere are some useful shortcuts for certain types of vector:\n\n1:5\n\n[1] 1 2 3 4 5\n\nseq(from = 3, to = 5, by = 0.5)\n\n[1] 3.0 3.5 4.0 4.5 5.0\n\nLETTERS\n\n [1] \"A\" \"B\" \"C\" \"D\" \"E\" \"F\" \"G\" \"H\" \"I\" \"J\" \"K\" \"L\" \"M\" \"N\" \"O\" \"P\" \"Q\" \"R\" \"S\"\n[20] \"T\" \"U\" \"V\" \"W\" \"X\" \"Y\" \"Z\"\n\n\nWhat do you think letters returns?"
  },
  {
    "objectID": "slides/03-data-wrangling/index.html#subsetting-vectors",
    "href": "slides/03-data-wrangling/index.html#subsetting-vectors",
    "title": "Data Types, Structures and Wrangling",
    "section": "Subsetting vectors",
    "text": "Subsetting vectors\nWe subset vectors using []:\n\nBy position, starting at 1\n\n\nletters[c(1, 5, 9, 15, 21)]\n\n[1] \"a\" \"e\" \"i\" \"o\" \"u\"\n\n\n\nBy logical vector\n\n\nx &lt;- c(5, 3, 6, 1)\nx[c(TRUE, FALSE, TRUE, FALSE)]\n\n[1] 5 6\n\n\n\nx[x &gt; 4]\n\n[1] 5 6"
  },
  {
    "objectID": "slides/03-data-wrangling/index.html#your-turn",
    "href": "slides/03-data-wrangling/index.html#your-turn",
    "title": "Data Types, Structures and Wrangling",
    "section": "Your turn!",
    "text": "Your turn!\n\nIn your R-Foundations project from last week, create and save a new script called data-types.R\nLook at the help page for the rep() function: ?rep\nStarting with the vector x &lt;- c(1,3,6), can you make the following patterns:\n\n1, 3, 6, 1, 3, 6\n1, 1, 3, 3, 6, 6\n1, 1, 3, 3, 6, 6, 1, 1, 3, 3, 6, 6\n\nWhat does rep(x, 2, 2) give? Is it what you expected? Can you explain the output?\n\n\nrep(x, 2) or rep(x, times = 2) rep(x, each = 2) rep(x, 2, each = 2) rep(x, 2, 2) is rep(x, times = 2, length.out = 2)"
  },
  {
    "objectID": "slides/03-data-wrangling/index.html#factors",
    "href": "slides/03-data-wrangling/index.html#factors",
    "title": "Data Types, Structures and Wrangling",
    "section": "Factors",
    "text": "Factors\nFactors are used to represent categorical data. They can be ordered or unordered.\nFactors are stored as integers, and have labels associated with these unique integers. While factors usually look (and often behave) like character vectors, they are actually integers under the hood, and you need to be careful when treating them like strings."
  },
  {
    "objectID": "slides/03-data-wrangling/index.html#factors-1",
    "href": "slides/03-data-wrangling/index.html#factors-1",
    "title": "Data Types, Structures and Wrangling",
    "section": "Factors",
    "text": "Factors\nOnce created, factors can only contain a pre-defined set values, known as levels. By default, R always sorts levels in alphabetical order. For instance, if you have a factor with 2 levels:\n\nfruits &lt;- factor(c(\"apple\", \"apple\", \"pear\"))\nfruits\n\n[1] apple apple pear \nLevels: apple pear\n\nstr(fruits)\n\n Factor w/ 2 levels \"apple\",\"pear\": 1 1 2\n\n\nThe forcats package from the tidyverse has many functions for dealing with factors."
  },
  {
    "objectID": "slides/03-data-wrangling/index.html#data-frames",
    "href": "slides/03-data-wrangling/index.html#data-frames",
    "title": "Data Types, Structures and Wrangling",
    "section": "Data frames",
    "text": "Data frames\nData sets are stored in R as data frames\nThese are structured as a list of objects, typically vectors, of the same length.\n\n\nlibrary(tidyverse)\nlibrary(palmerpenguins)\nstr(penguins)\n\ntibble [344 × 8] (S3: tbl_df/tbl/data.frame)\n $ species          : Factor w/ 3 levels \"Adelie\",\"Chinstrap\",..: 1 1 1 1 1 1 1 1 1 1 ...\n $ island           : Factor w/ 3 levels \"Biscoe\",\"Dream\",..: 3 3 3 3 3 3 3 3 3 3 ...\n $ bill_length_mm   : num [1:344] 39.1 39.5 40.3 NA 36.7 39.3 38.9 39.2 34.1 42 ...\n $ bill_depth_mm    : num [1:344] 18.7 17.4 18 NA 19.3 20.6 17.8 19.6 18.1 20.2 ...\n $ flipper_length_mm: int [1:344] 181 186 195 NA 193 190 181 195 193 190 ...\n $ body_mass_g      : int [1:344] 3750 3800 3250 NA 3450 3650 3625 4675 3475 4250 ...\n $ sex              : Factor w/ 2 levels \"female\",\"male\": 2 1 1 NA 1 2 1 2 NA NA ...\n $ year             : int [1:344] 2007 2007 2007 2007 2007 2007 2007 2007 2007 2007 ..."
  },
  {
    "objectID": "slides/03-data-wrangling/index.html#tibbles",
    "href": "slides/03-data-wrangling/index.html#tibbles",
    "title": "Data Types, Structures and Wrangling",
    "section": "tibbles",
    "text": "tibbles\nFrom the tibble page:\n\nA tibble, or tbl_df, is a modern reimagining of the data.frame, keeping what time has proven to be effective, and throwing out what is not. Tibbles are data.frames that are lazy and surly: they do less (i.e. they don’t change variable names or types, and don’t do partial matching) and complain more (e.g. when a variable does not exist). This forces you to confront problems earlier, typically leading to cleaner, more expressive code. Tibbles also have an enhanced print() method which makes them easier to use with large datasets containing complex objects."
  },
  {
    "objectID": "slides/03-data-wrangling/index.html#creating-data-frames",
    "href": "slides/03-data-wrangling/index.html#creating-data-frames",
    "title": "Data Types, Structures and Wrangling",
    "section": "Creating data frames",
    "text": "Creating data frames\n\n`my numbers` &lt;- 1:9\nfruits &lt;- rep(c(\"apple\", \"pear\", \"orange\"), 3)\n\n\n\n\ndata.frame(`my numbers`, \n           fruits)\n\n  my.numbers fruits\n1          1  apple\n2          2   pear\n3          3 orange\n4          4  apple\n5          5   pear\n6          6 orange\n7          7  apple\n8          8   pear\n9          9 orange\n\n\n\n\ntibble(`my numbers`, \n       fruits)\n\n# A tibble: 9 × 2\n  `my numbers` fruits\n         &lt;int&gt; &lt;chr&gt; \n1            1 apple \n2            2 pear  \n3            3 orange\n4            4 apple \n5            5 pear  \n6            6 orange\n7            7 apple \n8            8 pear  \n9            9 orange\n\n\n\n\nSpot the differences!"
  },
  {
    "objectID": "slides/03-data-wrangling/index.html#import-dataset-button",
    "href": "slides/03-data-wrangling/index.html#import-dataset-button",
    "title": "Data Types, Structures and Wrangling",
    "section": "Import dataset (button)",
    "text": "Import dataset (button)\nUsing the Import Dataset dialog in RStudio\n\nwe can import files stored locally or online in the following formats:\n\n.txt/.csv via read_delim/read_csv from readr.\n.xlsx via read_excel from readxl.\n.sav/.por , .sas7bdat and .dta via read_spss, read_sas and read_stata respectively from haven.\n\nMost of these functions also allow files to be compressed, e.g. as .zip."
  },
  {
    "objectID": "slides/03-data-wrangling/index.html#file-names-and-paths-and-project-structure",
    "href": "slides/03-data-wrangling/index.html#file-names-and-paths-and-project-structure",
    "title": "Data Types, Structures and Wrangling",
    "section": "File names and paths and project structure",
    "text": "File names and paths and project structure\nIt’s REALLY important to have good file names and paths, and a good project structure.\nI leave you in the extremely capable hand of Danielle Navarro to take you thoroughly through best practices:\nhttps://djnavarro.net/slides-project-structure/#1\nI also HIGHLY recommend you check out the here package, which enables easy file referencing in project-oriented workflows."
  },
  {
    "objectID": "slides/03-data-wrangling/index.html#import-data-code",
    "href": "slides/03-data-wrangling/index.html#import-data-code",
    "title": "Data Types, Structures and Wrangling",
    "section": "Import data (code)",
    "text": "Import data (code)\nThe rio package provides a common interface to the functions used by Import Dataset as well as many others.\nThe data format is automatically recognised from the file extension. To read the data in as a tibble, we use the setclass argument.\n\nlibrary(rio)\npenguins_lter &lt;- import(\"data/penguins_lter.csv\")\npenguins_lter_tbl &lt;- import(\"data/penguins_lter.csv\", setclass = \"tibble\")\n\nSee ?rio for the underlying functions used for each format and the corresponding optional arguments, e.g. the skip argument to read_excel to skip a certain number of rows."
  },
  {
    "objectID": "slides/03-data-wrangling/index.html#import-data-demo",
    "href": "slides/03-data-wrangling/index.html#import-data-demo",
    "title": "Data Types, Structures and Wrangling",
    "section": "Import data demo",
    "text": "Import data demo\nShow both button (in Environment and from the file itself) and code\n\nFrom file\n\ndata/penguins_lter.csv\n\nFrom URL\n\nhttps://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2022/2022-08-09/wheels.csv\n\nYour turn!"
  },
  {
    "objectID": "slides/03-data-wrangling/index.html#dplyr",
    "href": "slides/03-data-wrangling/index.html#dplyr",
    "title": "Data Types, Structures and Wrangling",
    "section": "dplyr",
    "text": "dplyr\nThe dplyr package (part of the tidyverse) provides the following key functions to operate on data frames:\n\nfilter()\narrange()\nselect()\nmutate()\nsummarise()\n\nThey all take a data frame as their first argument. The subsequent arguments describe what to do with the data frame. The result is a new data frame."
  },
  {
    "objectID": "slides/03-data-wrangling/index.html#load-packages",
    "href": "slides/03-data-wrangling/index.html#load-packages",
    "title": "Data Types, Structures and Wrangling",
    "section": "Load packages",
    "text": "Load packages\n\nlibrary(dplyr)\nlibrary(palmerpenguins)"
  },
  {
    "objectID": "slides/03-data-wrangling/index.html#filter-pick-rows-based-on-values-of-observations.",
    "href": "slides/03-data-wrangling/index.html#filter-pick-rows-based-on-values-of-observations.",
    "title": "Data Types, Structures and Wrangling",
    "section": "filter(): pick rows based on values of observations.",
    "text": "filter(): pick rows based on values of observations.\n\nExampleNotes\n\n\n\n\nfilter(penguins, \n       species == \"Gentoo\", \n       bill_length_mm &gt; 48 & bill_depth_mm &gt; 15, \n       !is.na(sex))\n\n# A tibble: 39 × 8\n   species island bill_length_mm bill_depth_mm flipper_length_mm body_mass_g\n   &lt;fct&gt;   &lt;fct&gt;           &lt;dbl&gt;         &lt;dbl&gt;             &lt;int&gt;       &lt;int&gt;\n 1 Gentoo  Biscoe           50            16.3               230        5700\n 2 Gentoo  Biscoe           50            15.2               218        5700\n 3 Gentoo  Biscoe           49            16.1               216        5550\n 4 Gentoo  Biscoe           49.3          15.7               217        5850\n 5 Gentoo  Biscoe           49.2          15.2               221        6300\n 6 Gentoo  Biscoe           48.7          15.1               222        5350\n 7 Gentoo  Biscoe           50            15.3               220        5550\n 8 Gentoo  Biscoe           59.6          17                 230        6050\n 9 Gentoo  Biscoe           48.4          16.3               220        5400\n10 Gentoo  Biscoe           48.7          15.7               208        5350\n# ℹ 29 more rows\n# ℹ 2 more variables: sex &lt;fct&gt;, year &lt;int&gt;\n\n\n\n\n\n\nvariable names are unquoted\nbuilding blocks of conditions:\n\n\n\n\nBuilding block\nR code\n\n\n\n\nBinary comparisons\n&gt;, &lt;, ==, &lt;=, &gt;=, !=\n\n\nLogical operators\nor |, and &, not !\n\n\nValue matching\ne.g. x %in% 6:9\n\n\nMissing indicator\ne.g. is.na(x)"
  },
  {
    "objectID": "slides/03-data-wrangling/index.html#select-select-variables-columns-in-a-dataset",
    "href": "slides/03-data-wrangling/index.html#select-select-variables-columns-in-a-dataset",
    "title": "Data Types, Structures and Wrangling",
    "section": "select(): select variables (columns) in a dataset",
    "text": "select(): select variables (columns) in a dataset\n\nExample 1Example 2Example 3Example 4Note\n\n\n\nselect(penguins, bill_length_mm, bill_depth_mm)\n\n# A tibble: 344 × 2\n   bill_length_mm bill_depth_mm\n            &lt;dbl&gt;         &lt;dbl&gt;\n 1           39.1          18.7\n 2           39.5          17.4\n 3           40.3          18  \n 4           NA            NA  \n 5           36.7          19.3\n 6           39.3          20.6\n 7           38.9          17.8\n 8           39.2          19.6\n 9           34.1          18.1\n10           42            20.2\n# ℹ 334 more rows\n\n\n\n\n\nselect(penguins, bill_length_mm:body_mass_g)\n\n# A tibble: 344 × 4\n   bill_length_mm bill_depth_mm flipper_length_mm body_mass_g\n            &lt;dbl&gt;         &lt;dbl&gt;             &lt;int&gt;       &lt;int&gt;\n 1           39.1          18.7               181        3750\n 2           39.5          17.4               186        3800\n 3           40.3          18                 195        3250\n 4           NA            NA                  NA          NA\n 5           36.7          19.3               193        3450\n 6           39.3          20.6               190        3650\n 7           38.9          17.8               181        3625\n 8           39.2          19.6               195        4675\n 9           34.1          18.1               193        3475\n10           42            20.2               190        4250\n# ℹ 334 more rows\n\n\n\n\n\nselect(penguins, starts_with(\"bill\"))\n\n# A tibble: 344 × 2\n   bill_length_mm bill_depth_mm\n            &lt;dbl&gt;         &lt;dbl&gt;\n 1           39.1          18.7\n 2           39.5          17.4\n 3           40.3          18  \n 4           NA            NA  \n 5           36.7          19.3\n 6           39.3          20.6\n 7           38.9          17.8\n 8           39.2          19.6\n 9           34.1          18.1\n10           42            20.2\n# ℹ 334 more rows\n\n\n\n\n\nselect(penguins, where(is.numeric))\n\n# A tibble: 344 × 5\n   bill_length_mm bill_depth_mm flipper_length_mm body_mass_g  year\n            &lt;dbl&gt;         &lt;dbl&gt;             &lt;int&gt;       &lt;int&gt; &lt;int&gt;\n 1           39.1          18.7               181        3750  2007\n 2           39.5          17.4               186        3800  2007\n 3           40.3          18                 195        3250  2007\n 4           NA            NA                  NA          NA  2007\n 5           36.7          19.3               193        3450  2007\n 6           39.3          20.6               190        3650  2007\n 7           38.9          17.8               181        3625  2007\n 8           39.2          19.6               195        4675  2007\n 9           34.1          18.1               193        3475  2007\n10           42            20.2               190        4250  2007\n# ℹ 334 more rows\n\n\n\n\nThere are several other selectors. See ?dplyr::select or online for further details."
  },
  {
    "objectID": "slides/03-data-wrangling/index.html#a-note-about-pipes-vs",
    "href": "slides/03-data-wrangling/index.html#a-note-about-pipes-vs",
    "title": "Data Types, Structures and Wrangling",
    "section": "A note about pipes: |> vs %>%",
    "text": "A note about pipes: |&gt; vs %&gt;%\nPipes pass what comes before into an argument (by default the first) of what comes after.\nPipes are a powerful tool for clearly expressing a sequence of multiple operations.\n\n\n|&gt;\n\nThe ‘native’ pipe, built into base R since v4.1 (May 2021)\nImproved in v4.2 (April 2022)\n\n\n%&gt;%\n\nHas been around in the magrittr package since 2014\nUsed throughout the tidyverse (though that is changing)"
  },
  {
    "objectID": "slides/03-data-wrangling/index.html#pipes-similarity",
    "href": "slides/03-data-wrangling/index.html#pipes-similarity",
    "title": "Data Types, Structures and Wrangling",
    "section": "Pipes: similarity",
    "text": "Pipes: similarity\nBy default, a pipe takes what comes before and pass it to first argument of what comes after.\n\nExample 1Example 2\n\n\n\nlog(2, base = 10)\n\n[1] 0.30103\n\n2 %&gt;% log(base = 10)\n\n[1] 0.30103\n\n2 |&gt; log(base = 10)\n\n[1] 0.30103\n\n\n\n\n\npaste(\"a\", \"b\", \"c\")\n\n[1] \"a b c\"\n\n\"a\" %&gt;% paste(\"b\", \"c\")\n\n[1] \"a b c\"\n\n\"a\" |&gt; paste(\"b\", \"c\")\n\n[1] \"a b c\""
  },
  {
    "objectID": "slides/03-data-wrangling/index.html#pipes-key-difference",
    "href": "slides/03-data-wrangling/index.html#pipes-key-difference",
    "title": "Data Types, Structures and Wrangling",
    "section": "Pipes: key difference",
    "text": "Pipes: key difference\nSo far, so good, but what if we want to pipe into a subsequent argument?\n\nExample 1Example 2\n\n\n\nlog(2, 10) ## don't need to name the argument\n\n[1] 0.30103\n\n10 %&gt;% log(2, .)\n\n[1] 0.30103\n\n10 |&gt; log(2, base = _)\n\n[1] 0.30103\n\n\n\n\n\npaste(\"a\", \"b\", \"c\")\n\n[1] \"a b c\"\n\n\"b\" %&gt;% paste(\"a\", ., \"c\")\n\n[1] \"a b c\"\n\n\"b\" |&gt; paste(\"a\", ..2 = _, \"c\")\n\n[1] \"a b c\"\n\n\n\n\n\nDifferent placeholder (. vs _) and with native pipe need a named argument"
  },
  {
    "objectID": "slides/03-data-wrangling/index.html#pipe-keyboard-shortcut",
    "href": "slides/03-data-wrangling/index.html#pipe-keyboard-shortcut",
    "title": "Data Types, Structures and Wrangling",
    "section": "Pipe keyboard shortcut",
    "text": "Pipe keyboard shortcut\nThere is an RStudio shortcut for the pipe which also puts spaces around it:\nCtrl/⌘ + ⇧ + M.\nThis can be set to either %&gt;% or |&gt; in the RStudio preferences.\nGo to Tools -&gt; Global Options -&gt; Code and check/uncheck box for “Use native pipe operator”."
  },
  {
    "objectID": "slides/03-data-wrangling/index.html#arrange-change-the-ordering-of-rows",
    "href": "slides/03-data-wrangling/index.html#arrange-change-the-ordering-of-rows",
    "title": "Data Types, Structures and Wrangling",
    "section": "arrange(): change the ordering of rows",
    "text": "arrange(): change the ordering of rows\n\nExample 1Example 2Example 3\n\n\n\npenguins |&gt;\n  select(species, sex, flipper_length_mm) |&gt;\n  arrange(flipper_length_mm)\n\n# A tibble: 344 × 3\n   species   sex    flipper_length_mm\n   &lt;fct&gt;     &lt;fct&gt;              &lt;int&gt;\n 1 Adelie    female               172\n 2 Adelie    female               174\n 3 Adelie    female               176\n 4 Adelie    female               178\n 5 Adelie    male                 178\n 6 Adelie    female               178\n 7 Chinstrap female               178\n 8 Adelie    &lt;NA&gt;                 179\n 9 Adelie    &lt;NA&gt;                 180\n10 Adelie    male                 180\n# ℹ 334 more rows\n\n\n\n\n\npenguins |&gt;\n  select(species, sex, flipper_length_mm) |&gt;\n  arrange(species, flipper_length_mm)\n\n# A tibble: 344 × 3\n   species sex    flipper_length_mm\n   &lt;fct&gt;   &lt;fct&gt;              &lt;int&gt;\n 1 Adelie  female               172\n 2 Adelie  female               174\n 3 Adelie  female               176\n 4 Adelie  female               178\n 5 Adelie  male                 178\n 6 Adelie  female               178\n 7 Adelie  &lt;NA&gt;                 179\n 8 Adelie  &lt;NA&gt;                 180\n 9 Adelie  male                 180\n10 Adelie  male                 180\n# ℹ 334 more rows\n\n\n\n\n\npenguins |&gt;\n  select(species, sex, flipper_length_mm) |&gt;\n  arrange(desc(flipper_length_mm))\n\n# A tibble: 344 × 3\n   species sex   flipper_length_mm\n   &lt;fct&gt;   &lt;fct&gt;             &lt;int&gt;\n 1 Gentoo  male                231\n 2 Gentoo  male                230\n 3 Gentoo  male                230\n 4 Gentoo  male                230\n 5 Gentoo  male                230\n 6 Gentoo  male                230\n 7 Gentoo  male                230\n 8 Gentoo  male                230\n 9 Gentoo  male                229\n10 Gentoo  male                229\n# ℹ 334 more rows"
  },
  {
    "objectID": "slides/03-data-wrangling/index.html#mutate-create-and-modify-columns",
    "href": "slides/03-data-wrangling/index.html#mutate-create-and-modify-columns",
    "title": "Data Types, Structures and Wrangling",
    "section": "mutate(): create and modify columns",
    "text": "mutate(): create and modify columns\n\nExample 1Example 2Example 3\n\n\n\npenguins |&gt;\n  select(bill_length_mm) |&gt;\n  mutate(bill_length_mm_sq = bill_length_mm^2)\n\n# A tibble: 344 × 2\n   bill_length_mm bill_length_mm_sq\n            &lt;dbl&gt;             &lt;dbl&gt;\n 1           39.1             1529.\n 2           39.5             1560.\n 3           40.3             1624.\n 4           NA                 NA \n 5           36.7             1347.\n 6           39.3             1544.\n 7           38.9             1513.\n 8           39.2             1537.\n 9           34.1             1163.\n10           42               1764 \n# ℹ 334 more rows\n\n\n\n\n\npenguins |&gt;\n  filter(species == \"Gentoo\") |&gt;\n  select(sex, flipper_length_mm) |&gt;\n  mutate(size = if_else(flipper_length_mm &gt; 217, \"big\", \"small\"))\n\n# A tibble: 124 × 3\n   sex    flipper_length_mm size \n   &lt;fct&gt;              &lt;int&gt; &lt;chr&gt;\n 1 female               211 small\n 2 male                 230 big  \n 3 female               210 small\n 4 male                 218 big  \n 5 male                 215 small\n 6 female               210 small\n 7 female               211 small\n 8 male                 219 big  \n 9 female               209 small\n10 male                 215 small\n# ℹ 114 more rows\n\n\n\n\n\npenguins |&gt;\n  select(bill_length_mm) |&gt;\n  filter(!is.na(bill_length_mm)) |&gt;\n  mutate(bill_length_mm_cumsum = cumsum(bill_length_mm))\n\n# A tibble: 342 × 2\n   bill_length_mm bill_length_mm_cumsum\n            &lt;dbl&gt;                 &lt;dbl&gt;\n 1           39.1                  39.1\n 2           39.5                  78.6\n 3           40.3                 119. \n 4           36.7                 156. \n 5           39.3                 195. \n 6           38.9                 234. \n 7           39.2                 273  \n 8           34.1                 307. \n 9           42                   349. \n10           37.8                 387. \n# ℹ 332 more rows"
  },
  {
    "objectID": "slides/03-data-wrangling/index.html#summarise-reduces-multiple-values-down-to-a-single-summary",
    "href": "slides/03-data-wrangling/index.html#summarise-reduces-multiple-values-down-to-a-single-summary",
    "title": "Data Types, Structures and Wrangling",
    "section": "summarise(): reduces multiple values down to a single summary",
    "text": "summarise(): reduces multiple values down to a single summary\n\nExample 1Example 2Example 3Example 4: count\n\n\n\npenguins |&gt;\n  summarise(mean(body_mass_g, na.rm = TRUE))  \n\n# A tibble: 1 × 1\n  `mean(body_mass_g, na.rm = TRUE)`\n                              &lt;dbl&gt;\n1                             4202.\n\n\n\n\n\npenguins |&gt;\n  group_by(species, sex) |&gt;\n  filter(!is.na(sex)) |&gt;\n  summarise(mean = mean(body_mass_g, na.rm = TRUE)) |&gt;  # give column a name\n  ungroup() # best practice after group_by()\n\n# A tibble: 6 × 3\n  species   sex     mean\n  &lt;fct&gt;     &lt;fct&gt;  &lt;dbl&gt;\n1 Adelie    female 3369.\n2 Adelie    male   4043.\n3 Chinstrap female 3527.\n4 Chinstrap male   3939.\n5 Gentoo    female 4680.\n6 Gentoo    male   5485.\n\n\n\n\n\npenguins |&gt;\n  filter(!is.na(sex)) |&gt;\n  summarise(mean = mean(body_mass_g, na.rm = TRUE),\n            .by = c(species, sex)) # new in dplyr 1.1.0, note the `.`\n\n# A tibble: 6 × 3\n  species   sex     mean\n  &lt;fct&gt;     &lt;fct&gt;  &lt;dbl&gt;\n1 Adelie    male   4043.\n2 Adelie    female 3369.\n3 Gentoo    female 4680.\n4 Gentoo    male   5485.\n5 Chinstrap female 3527.\n6 Chinstrap male   3939.\n\n\n\n\n\npenguins |&gt;\n  count(species, island)\n\n# A tibble: 5 × 3\n  species   island        n\n  &lt;fct&gt;     &lt;fct&gt;     &lt;int&gt;\n1 Adelie    Biscoe       44\n2 Adelie    Dream        56\n3 Adelie    Torgersen    52\n4 Chinstrap Dream        68\n5 Gentoo    Biscoe      124\n\n\nShortcut for\n\npenguins |&gt;\n  summarise(n = n(), .by = c(species, island))\n\n\n\n\n\ncount() and summarise(n = n()) give different orderings"
  },
  {
    "objectID": "slides/03-data-wrangling/index.html#your-turn-1",
    "href": "slides/03-data-wrangling/index.html#your-turn-1",
    "title": "Data Types, Structures and Wrangling",
    "section": "Your turn!",
    "text": "Your turn!\n\nExplore the wheels data!\nBe ready to share some of your code in the chat"
  },
  {
    "objectID": "slides/03-data-wrangling/index.html#tidydatatutor.com",
    "href": "slides/03-data-wrangling/index.html#tidydatatutor.com",
    "title": "Data Types, Structures and Wrangling",
    "section": "tidydatatutor.com",
    "text": "tidydatatutor.com\nTidy Data Tutor lets you write R and Tidyverse code in your browser and see how your data frame changes at each step of a data analysis pipeline.\nDEMO"
  },
  {
    "objectID": "slides/03-data-wrangling/index.html#additional-resources",
    "href": "slides/03-data-wrangling/index.html#additional-resources",
    "title": "Data Types, Structures and Wrangling",
    "section": "Additional resources",
    "text": "Additional resources\n\nRStudio cheatsheets\nR for data science book\nferriswheels"
  },
  {
    "objectID": "slides/03-data-wrangling/index.html#sources",
    "href": "slides/03-data-wrangling/index.html#sources",
    "title": "Data Types, Structures and Wrangling",
    "section": "Sources",
    "text": "Sources\nMaterial inspired by and remixed from:\n\nhttps://stat545.com/r-basics.html\nhttps://swcarpentry.github.io/r-novice-inflammation/13-supp-data-structures/\nhttps://slides.silviacanelon.com/tour-of-the-tidyverse-v2/\nhttps://www.heatherturner.net/teaching/zero-to-hero/\nhttp://adv-r.had.co.nz/Style.html"
  },
  {
    "objectID": "slides/03-data-wrangling/index.html#license",
    "href": "slides/03-data-wrangling/index.html#license",
    "title": "Data Types, Structures and Wrangling",
    "section": "License",
    "text": "License\nLicensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License (CC BY-NC-SA 4.0)."
  },
  {
    "objectID": "schedule.html",
    "href": "schedule.html",
    "title": "Schedule",
    "section": "",
    "text": "Time\nSession\n\n\n\n\n09:30–10:00\nCoffee\n\n\n10:00–10:10\nWelcome!\n\n\n10:10–11:25\nIntroduction to R and RStudio\n\n\n11:25–11:40\nCoffee\n\n\n11:40–13:00\nData Types, Structures and Wrangling\n\n\n13:00–13:30\nLunch\n\n\n13:30–15:00\nGraphics\n\n\n15:00–15:15\nCoffee\n\n\n15:15–16:30\nQuarto"
  }
]