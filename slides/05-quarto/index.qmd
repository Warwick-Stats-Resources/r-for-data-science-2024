---
title: Quarto
subtitle: R Foundations Course
author: Heather Turner | Department of Statistics | University of Warwick
title-slide-attributes:
  data-background-color: "#552D62"
date: 2024-03-21
date-format: long
format: 
  warwickpres-revealjs:
    execute:
      echo: true
      code-overflow: wrap
---

## Disclaimer

These slides are almost entirely copied from Tom Mock's 'Getting Started with Quarto' workshop at rstudio::conf(2022).

- [Workshop website](https://rstudio-conf-2022.github.io/get-started-quarto/)
- [Workshop repo](https://github.com/rstudio-conf-2022/get-started-quarto)

Shared under Creative Commons 4.0 License. 

# Intro to Quarto {background-color="#552D62"}

## Hello Quarto

> ### Quarto^Â®^ is an open-source scientific and technical publishing system built on [Pandoc](https://pandoc.org/)

. . .

> You can weave together narrative text and code to produce elegantly formatted output as documents, web pages, blog posts, books and more.

##  {background-image="https://raw.githubusercontent.com/allisonhorst/stats-illustrations/master/rstats-artwork/rmarkdown_wizards.png" background-size="contain"}

## What about RMarkdown?

![](images/rmd-knitr.png)

## So what is Quarto?

> Quarto is the next generation of R Markdown. For **everyone**.

> Quarto is a command line interface (CLI) that renders plain text formats (`.qmd`, `.rmd`, `.md`) OR mixed formats (`.ipynb`/Jupyter notebook) into static PDF/Word/HTML reports, books, websites, presentations and more

## Quarto, more than *just* `knitr`

We learned from 10 years of literate programming with `knitr` + `rmarkdown`

![](images/qmd-knitr.png)

## For everyone

- Works with R, Python, Julia, Observable JS

- `knitr` and `jupyter` engines

- Works in RStudio, Jupyter Notebooks, VS Code

. . .

For the R Foundations course, we'll focus on R and RStudio

## So what is Quarto?

> A Quarto document i.e. a `.qmd` is a plain text file, like a `.rmd`, that can be rendered to many different formats

![](https://quarto.org/docs/get-started/hello/images/rstudio-source-visual.png){width="1200px" fig-align="center" fig-alt="A screenshot of a Visual and Source Quarto document"}

## One install, "Batteries included"

-   RMarkdown grew into a large ecosystem, with **varying syntax**.

. . .

Quarto comes **"batteries included"** straight out of the box

-   HTML reports and websites
-   PDF reports
-   MS Office (Word, Powerpoint)
-   Presentations (Powerpoint, Beamer, `revealjs`)
-   Books

. . .

-   Any language, *exact* same approach and syntax

## Quarto for RMarkdown users

See [FAQs](https://quarto.org/docs/faq/rmarkdown.html), including a conversion from RMarkdown formats to Quarto equivalents.

## Anatomy of a Quarto document

-   Metadata (YAML)

``` yaml
---
format: html
---
```

## Anatomy of a Quarto document

-   Code

```{r}
#| echo: fenced
#| eval: true
library(dplyr)
mtcars %>% 
  group_by(cyl) %>%
  summarize(mean = mean(mpg), .groups = "drop")
```

## Anatomy of a Quarto document

-   Text

``` markdown
# Heading 1
This is a sentence with some **bold text** and some *italic text* 
This is an [image](image.png).
```

## Metadata: YAML

The [YAML](https://yaml.org/) metadata or header is:

> processed in many stages of the rendering process and can influence the final document in many different ways. It is placed at the very beginning of the document and is read by each of Pandoc, Quarto and `knitr`. Along the way, the information that it contains can affect the code, content, and the rendering process.

## YAML

``` yaml
---
title: "My Document"
format: 
  html:
    toc: true
    code-fold: true
---
```

## Markdown

> Quarto is based on Pandoc and uses its variation of markdown as its underlying document syntax. Pandoc markdown is an extended and slightly revised version of John Gruber's [Markdown](https://daringfireball.net/projects/markdown/) syntax.

. . .

> Markdown is a plain text format that is designed to be easy to write, and, even more importantly, easy to read

## Text Formatting

+-----------------------------------+-------------------------------+
| Markdown Syntax                   | Output                        |
+===================================+===============================+
|     *italics* and **bold**        | *italics* and **bold**        |
+-----------------------------------+-------------------------------+
|     superscript^2^ / subscript~2~ | superscript^2^ / subscript~2~ |
+-----------------------------------+-------------------------------+
|     ~~strikethrough~~             | ~~strikethrough~~             |
+-----------------------------------+-------------------------------+
|     `verbatim code`               | `verbatim code`               |
+-----------------------------------+-------------------------------+

## Headings

+---------------------+-----------------+
| Markdown Syntax     | Output          |
+=====================+=================+
|     # Header 1      | # Header 1      |
+---------------------+-----------------+
|     ## Header 2     | ## Header 2     |
+---------------------+-----------------+
|     ### Header 3    | ### Header 3    |
+---------------------+-----------------+
|     #### Header 4   | #### Header 4   |
+---------------------+-----------------+
|     ##### Header 5  | ##### Header 5  |
+---------------------+-----------------+
|     ###### Header 6 | ###### Header 6 |
+---------------------+-----------------+

: {tbl-colwidths="\[40, 60\]"}

## Links

- There are several types of "links" or hyperlinks.

::: {.panel-tabset}
## Markdown
```markdown
You can embed [named hyperlinks](https://quarto.org/),
direct urls like <https://quarto.org/>, and links to 
[other places](#quarto-anatomy) in 
the document. The syntax is similar for embedding an
inline image: ![Penguins](images/lter_penguins.png).
```

## Output
You can embed [named hyperlinks](https://quarto.org/),
direct urls like <https://quarto.org/>, and links to  [other places](#quarto-anatomy) in 
the document. The syntax is similar for embedding an inline image:  
![Penguins](images/lter_penguins.png){style="width:250px;"}
:::



## Code

```{r}
#| echo: fenced
#| output-location: column
#| label: fig-airquality
#| fig-cap: Temperature and ozone level.
#| warning: false

library(ggplot2)

ggplot(airquality, aes(Temp, Ozone)) + 
  geom_point() + 
  geom_smooth(method = "loess")
```


## Literate programming

[Literate programming is writing out the program logic in a human language with included (separated by a primitive markup) code snippets and macros. - [Wikipedia](https://en.wikipedia.org/wiki/Literate_programming)]{.smaller75}

    ---
    title: "ggplot2 demo"
    date: "5/22/2021"
    format: html
    ---

    ## Air Quality

    There is a relationship between temperature and the ozone level.

    ```{{r}}
    #| label: fig-airquality
    library(ggplot2)
    ggplot(airquality, aes(Temp, Ozone)) + 
      geom_point() + 
      geom_smooth(method = "loess")
    ```

## Metadata: YAML

"Yet Another Markup Language" or "YAML Ain't Markup Language"

``` yaml
---
key: value
---
```

## Output Options

``` yaml
---
format: something
---
```

. . .

``` yaml
---
format: html
---
```

``` yaml
---
format: pdf
---
```

``` yaml
---
format: revealjs
---
```

## Options on options

Then add option arguments!

``` yaml
---
format: 
  html:
    toc: true
    code-fold: true
---
```

. . .

Sub-options should be below the main format output and spacing matters!

``` yaml
---
format: 
  html:
    option1: text
    option2: logical
---
```

## YAML for `format: html`

</iframe>

## YAML is sensitive

``` yaml
---
format:html # invalid, no space between
---

---
format: # invalid, read as missing
html
---

---
format: 
  html: # valid but needs next object
---
```

## Anatomy of a code chunk

````md
```{{r}}
#| label: car-stuff
#| echo: false
mtcars %>% 
  distinct(cyl)
```
````
. . . 

- Has 3x backticks on each end ```` ``` ````  
- Indicate engine (`r`) between curly braces `{r}`  
- Place options underneath, behind the `#|` (hashpipe): 
  - `#| option1: value`  

## Quarto presentations

``` yaml
---
format: revealjs
---
```

``` yaml
---
format: 
  revealjs:
    slide-number: true
---
```

## This Quarto presentation

``` yaml
---
title: Quarto
subtitle: R Foundations course
author: Ella Kaye | Department of Statistics | University of Warwick
title-slide-attributes:
  data-background-color: "#552D62"
date: 2023-11-16
date-format: long
format: 
  revealjs:
    theme: [default, ../../slides.scss]
    slide-number: true
    execute:
      echo: true
---
```

## More on Quarto presentations

- [Official guide](https://quarto.org/docs/presentations/)

- [Slidecraft 101](https://emilhvitfeldt.com/blog#category=slidecraft%20101) by Emil Hvitfeldt

  - Colours and Fonts
  - Code and Output
  - Theme variants
  - Advanced slide themes
  - 7 tips and tricks

# Demo {background-color="#552D62"}

# Publishing {.inverse}

## Web publishing venues

| Destination                            | Description                                                                                                                                                                                     |
|----------------------------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
| [Quarto Pub](quarto-pub.qmd)           | Publishing service for Quarto documents, websites, and books.                                         |
| [GitHub Pages](github-pages.qmd)       | Publish content based on source code managed within a GitHub repository.                              |     
| [Posit Connect](rstudio-connect.qmd) | Publishing platform for secure sharing of data products within an organization.  |
| [Netlify](netlify.qmd)                 | Professional web publishing platform.                         | 
| [Confluence](confluence.qmd)         | Publishing platform for supporting team collaboration.  

... and more.

## Quarto Pub

Visit <https://quartopub.com/> and set up a free account.

:::{style="text-align: center"}
![](images/quartopub.png)
:::

## `quarto publish`

\
\

At the Terminal, run:

\

:::{style="font-size: 2em"}
```bash
quarto publish <document>
```
:::


## Resources

- <https://quarto.org>: The official documentation

- [Awesome Quarto](https://github.com/mcanouil/awesome-quarto): A curated list of Quarto talks, tools, examples & articles

- [Beautiful Reports and Persentations with Quarto](https://thomasmock.quarto.pub/reports-presentations/#/title-slide)

- [Getting Started with Quarto workshop website](https://rstudio-conf-2022.github.io/get-started-quarto/)

- [Quarto for R and RStudio workshop](https://posit-conf-2023.github.io/quarto-r/)

# SkillsForge password {.inverse}

# End matter {.inverse}

## Resources

These slides are almost entirely copied from Tom Mock's 'Getting Started with Quarto' workshop at rstudio::conf(2022).

- [Workshop website](https://rstudio-conf-2022.github.io/get-started-quarto/)
- [Workshop repo](https://github.com/rstudio-conf-2022/get-started-quarto)

Shared under Creative Commons 4.0 License. 

## License

Licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License ([CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/){target="_blank"}).


```{=html}
<!-- needs to be last chunk of presentation otherwise creates an extra slide -->
<!-- requires Quarto v1.3 -->
<!-- tint80 for border, tint20 for title -->
<!-- this should hopefully no longer be necessary in Quarto 1.4 -->
<!-- https://github.com/quarto-dev/quarto-cli/issues/5038 -->
<style type="text/css">
div.callout-note {
  border-left-color: #336695 !important;
}

div.callout-note.callout-style-default .callout-title {
  background-color: #CCD9E4 !important;
}

div.callout-caution {
  border-left-color: #AE4240 !important;
}

div.callout-caution.callout-style-default .callout-title {
  background-color: #ebd0cf !important;
}

div.callout-tip {
  border-left-color: #618157 !important;
}

div.callout-tip.callout-style-default .callout-title {
  background-color: #d8e0d5 !important;
}

div.callout-important {
  border-left-color: #775781 !important;
}

div.callout-important.callout-style-default .callout-title {
  background-color: #ddd5e0 !important;
}

div.callout-warning {
  border-left-color: #956133 !important;
}

div.callout-warning.callout-style-default .callout-title {
  background-color: #e4d8cc !important;
}
</style>
```


